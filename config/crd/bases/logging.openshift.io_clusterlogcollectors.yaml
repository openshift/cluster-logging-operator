---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.2
  creationTimestamp: null
  name: clusterlogcollectors.logging.openshift.io
spec:
  group: logging.openshift.io
  names:
    categories:
    - logging
    kind: ClusterLogCollector
    listKind: ClusterLogCollectorList
    plural: clusterlogcollectors
    shortNames:
    - lc
    singular: clusterlogcollector
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.managementState
      name: Management State
      type: string
    name: v2alpha1
    schema:
      openAPIV3Schema:
        description: ClusterLogCollector configures the log collector used by a ClusterLogForwarder.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              fluentd:
                description: Fluentd holds configuration specific to fluentd.
                properties:
                  buffer:
                    description: "FluentdBufferSpec represents a subset of fluentd
                      buffer parameters to tune the buffer configuration for all fluentd
                      outputs. It supports a subset of parameters to configure buffer
                      and queue sizing, flush operations and retry flushing. \n For
                      general parameters refer to: https://docs.fluentd.org/configuration/buffer-section#buffering-parameters
                      \n For flush parameters refer to: https://docs.fluentd.org/configuration/buffer-section#flushing-parameters
                      \n For retry parameters refer to: https://docs.fluentd.org/configuration/buffer-section#retries-parameters"
                    properties:
                      chunkLimitSize:
                        description: ChunkLimitSize represents the maximum size of
                          each chunk. Events will be written into chunks until the
                          size of chunks become this size.
                        pattern: ^([0-9]+)([kmgtKMGT]{0,1})$
                        type: string
                      flushInterval:
                        description: 'FlushInterval represents the time duration to
                          wait between two consecutive flush operations. Takes only
                          effect used together with `flushMode: interval`.'
                        pattern: ^([0-9]+)([smhd]{0,1})$
                        type: string
                      flushMode:
                        description: FlushMode represents the mode of the flushing
                          thread to write chunks. The mode allows lazy (if `time`
                          parameter set), per interval or immediate flushing.
                        enum:
                        - lazy
                        - interval
                        - immediate
                        type: string
                      flushThreadCount:
                        description: FlushThreadCount reprents the number of threads
                          used by the fluentd buffer plugin to flush/write chunks
                          in parallel.
                        format: int32
                        type: integer
                      overflowAction:
                        description: 'OverflowAction represents the action for the
                          fluentd buffer plugin to execute when a buffer queue is
                          full. (Default: block)'
                        enum:
                        - throw_exception
                        - block
                        - drop_oldest_chunk
                        type: string
                      retryMaxInterval:
                        description: 'RetryMaxInterval represents the maximum time
                          interval for exponential backoff between retries. Takes
                          only effect if used together with `retryType: exponential_backoff`.'
                        pattern: ^([0-9]+)([smhd]{0,1})$
                        type: string
                      retryTimeout:
                        description: RetryTimeout represents the maximum time interval
                          to attempt retries before giving up and the record is disguarded.  If
                          unspecified, the default will be used
                        pattern: ^([0-9]+)([smhd]{0,1})$
                        type: string
                      retryType:
                        description: RetryType represents the type of retrying flush
                          operations. Flush operations can be retried either periodically
                          or by applying exponential backoff.
                        enum:
                        - exponential_backoff
                        - periodic
                        type: string
                      retryWait:
                        description: RetryWait represents the time duration between
                          two consecutive retries to flush buffers for periodic retries
                          or a constant factor of time on retries with exponential
                          backoff.
                        pattern: ^([0-9]+)([smhd]{0,1})$
                        type: string
                      totalLimitSize:
                        description: TotalLimitSize represents the threshold of node
                          space allowed per fluentd buffer to allocate. Once this
                          threshold is reached, all append operations will fail with
                          error (and data will be lost).
                        pattern: ^([0-9]+)([kmgtKMGT]{0,1})$
                        type: string
                    type: object
                  inFile:
                    description: "FluentdInFileSpec represents a subset of fluentd
                      in-tail plugin parameters to tune the configuration for all
                      fluentd in-tail inputs. \n For general parameters refer to:
                      https://docs.fluentd.org/input/tail#parameters"
                    properties:
                      readLinesLimit:
                        description: ReadLinesLimit represents the number of lines
                          to read with each I/O operation
                        type: integer
                    type: object
                type: object
              managementState:
                description: ManagementState enable/disable management by the operator.
                type: string
              nodeSelector:
                additionalProperties:
                  type: string
                description: NodeSelector for scheduling  collector pods.
                type: object
              resources:
                description: Resources defines resource limits for collector containers.
                properties:
                  collector:
                    description: Collector resource requirements. The collector collects
                      and forwards logs.
                    properties:
                      limits:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Limits describes the maximum amount of compute
                          resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                      requests:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Requests describes the minimum amount of compute
                          resources required. If Requests is omitted for a container,
                          it defaults to Limits if that is explicitly specified, otherwise
                          to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                    type: object
                  metricExporter:
                    description: MetricExporter resource requirements. The metric
                      exporter montoris log files and provides metrics.
                    properties:
                      limits:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Limits describes the maximum amount of compute
                          resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                      requests:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Requests describes the minimum amount of compute
                          resources required. If Requests is omitted for a container,
                          it defaults to Limits if that is explicitly specified, otherwise
                          to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                    type: object
                type: object
              tolerations:
                description: Tolerations for scheduling  collector pods.
                items:
                  description: The pod this Toleration is attached to tolerates any
                    taint that matches the triple <key,value,effect> using the matching
                    operator <operator>.
                  properties:
                    effect:
                      description: Effect indicates the taint effect to match. Empty
                        means match all taint effects. When specified, allowed values
                        are NoSchedule, PreferNoSchedule and NoExecute.
                      type: string
                    key:
                      description: Key is the taint key that the toleration applies
                        to. Empty means match all taint keys. If the key is empty,
                        operator must be Exists; this combination means to match all
                        values and all keys.
                      type: string
                    operator:
                      description: Operator represents a key's relationship to the
                        value. Valid operators are Exists and Equal. Defaults to Equal.
                        Exists is equivalent to wildcard for value, so that a pod
                        can tolerate all taints of a particular category.
                      type: string
                    tolerationSeconds:
                      description: TolerationSeconds represents the period of time
                        the toleration (which must be of effect NoExecute, otherwise
                        this field is ignored) tolerates the taint. By default, it
                        is not set, which means tolerate the taint forever (do not
                        evict). Zero and negative values will be treated as 0 (evict
                        immediately) by the system.
                      format: int64
                      type: integer
                    value:
                      description: Value is the taint value the toleration matches
                        to. If the operator is Exists, the value should be empty,
                        otherwise just a regular string.
                      type: string
                  type: object
                type: array
              type:
                description: Type of underlying collector implementation to deploy.
                type: string
              vector:
                description: Vector holds configuration specific to vector.
                type: object
            type: object
          status:
            properties:
              conditions:
                description: Conditions is a set of Condition instances.
                items:
                  description: "Condition represents an observation of an object's
                    state. Conditions are an extension mechanism intended to be used
                    when the details of an observation are not a priori known or would
                    not apply to all instances of a given Kind. \n Conditions should
                    be added to explicitly convey properties that users and components
                    care about rather than requiring those properties to be inferred
                    from other observations. Once defined, the meaning of a Condition
                    can not be changed arbitrarily - it becomes part of the API, and
                    has the same backwards- and forwards-compatibility concerns of
                    any other part of the API."
                  properties:
                    lastTransitionTime:
                      format: date-time
                      type: string
                    message:
                      type: string
                    reason:
                      description: ConditionReason is intended to be a one-word, CamelCase
                        representation of the category of cause of the current status.
                        It is intended to be used in concise output, such as one-line
                        kubectl get output, and in summarizing occurrences of causes.
                      type: string
                    status:
                      type: string
                    type:
                      description: "ConditionType is the type of the condition and
                        is typically a CamelCased word or short phrase. \n Condition
                        types should indicate state in the \"abnormal-true\" polarity.
                        For example, if the condition indicates when a policy is invalid,
                        the \"is valid\" case is probably the norm, so the condition
                        should be called \"Invalid\"."
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
