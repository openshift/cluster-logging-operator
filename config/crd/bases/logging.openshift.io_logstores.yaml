---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.2
  creationTimestamp: null
  name: logstores.logging.openshift.io
spec:
  group: logging.openshift.io
  names:
    categories:
    - logging
    kind: LogStore
    listKind: LogStoreList
    plural: logstores
    shortNames:
    - ls
    singular: logstore
  scope: Namespaced
  versions:
  - name: v2alpha1
    schema:
      openAPIV3Schema:
        description: LogStore identifies the default store to be used by a LogForwarder
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: LogStoreSpec identifies the default store for logs.
            properties:
              elasticsearch:
                description: Specification of the Elasticsearch Log Store component
                properties:
                  nodeCount:
                    description: Number of nodes to deploy for Elasticsearch
                    format: int32
                    type: integer
                  nodeSelector:
                    additionalProperties:
                      type: string
                    description: Define which Nodes the Pods are scheduled on.
                    nullable: true
                    type: object
                  proxy:
                    description: Specification of the Elasticsearch Proxy component
                    properties:
                      resources:
                        description: ResourceRequirements describes the compute resource
                          requirements.
                        nullable: true
                        properties:
                          limits:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: 'Limits describes the maximum amount of compute
                              resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                            type: object
                          requests:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: 'Requests describes the minimum amount of
                              compute resources required. If Requests is omitted for
                              a container, it defaults to Limits if that is explicitly
                              specified, otherwise to an implementation-defined value.
                              More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                            type: object
                        type: object
                    type: object
                  redundancyPolicy:
                    description: The policy towards data redundancy to specify the
                      number of redundant primary shards
                    enum:
                    - FullRedundancy
                    - MultipleRedundancy
                    - SingleRedundancy
                    - ZeroRedundancy
                    type: string
                  resources:
                    description: The resource requirements for Elasticsearch
                    nullable: true
                    properties:
                      limits:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Limits describes the maximum amount of compute
                          resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                      requests:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Requests describes the minimum amount of compute
                          resources required. If Requests is omitted for a container,
                          it defaults to Limits if that is explicitly specified, otherwise
                          to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                    type: object
                  storage:
                    description: The storage specification for Elasticsearch data
                      nodes
                    nullable: true
                    properties:
                      size:
                        anyOf:
                        - type: integer
                        - type: string
                        description: The max storage capacity for the node to provision.
                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                        x-kubernetes-int-or-string: true
                      storageClassName:
                        description: 'The name of the storage class to use with creating
                          the node''s PVC. More info: https://kubernetes.io/docs/concepts/storage/storage-classes/'
                        type: string
                    type: object
                  tolerations:
                    items:
                      description: The pod this Toleration is attached to tolerates
                        any taint that matches the triple <key,value,effect> using
                        the matching operator <operator>.
                      properties:
                        effect:
                          description: Effect indicates the taint effect to match.
                            Empty means match all taint effects. When specified, allowed
                            values are NoSchedule, PreferNoSchedule and NoExecute.
                          type: string
                        key:
                          description: Key is the taint key that the toleration applies
                            to. Empty means match all taint keys. If the key is empty,
                            operator must be Exists; this combination means to match
                            all values and all keys.
                          type: string
                        operator:
                          description: Operator represents a key's relationship to
                            the value. Valid operators are Exists and Equal. Defaults
                            to Equal. Exists is equivalent to wildcard for value,
                            so that a pod can tolerate all taints of a particular
                            category.
                          type: string
                        tolerationSeconds:
                          description: TolerationSeconds represents the period of
                            time the toleration (which must be of effect NoExecute,
                            otherwise this field is ignored) tolerates the taint.
                            By default, it is not set, which means tolerate the taint
                            forever (do not evict). Zero and negative values will
                            be treated as 0 (evict immediately) by the system.
                          format: int64
                          type: integer
                        value:
                          description: Value is the taint value the toleration matches
                            to. If the operator is Exists, the value should be empty,
                            otherwise just a regular string.
                          type: string
                      type: object
                    type: array
                type: object
              lokistack:
                description: "LokiStack contains information about which LokiStack
                  to use for log storage if Type is set to LogStoreTypeLokiStack.
                  \n The cluster-logging-operator does not create or manage the referenced
                  LokiStack."
                properties:
                  name:
                    description: Name of the LokiStack resource.
                    type: string
                required:
                - name
                type: object
              type:
                description: "The Type of Log Storage to configure. The operator currently
                  supports either using ElasticSearch managed by elasticsearch-operator
                  or Loki managed by loki-operator (LokiStack) as a default log store.
                  \n When using ElasticSearch as a log store this operator also manages
                  the ElasticSearch deployment. \n When using LokiStack as a log store
                  this operator does not manage the LokiStack, but only creates configuration
                  referencing an existing LokiStack deployment. The user is responsible
                  for creating and managing the LokiStack himself."
                enum:
                - elasticsearch
                - lokistack
                type: string
            required:
            - type
            type: object
          status:
            properties:
              elasticsearchStatus:
                items:
                  properties:
                    cluster:
                      properties:
                        activePrimaryShards:
                          description: The number of Active Primary Shards for the
                            Elasticsearch Cluster
                          format: int32
                          type: integer
                        activeShards:
                          description: The number of Active Shards for the Elasticsearch
                            Cluster
                          format: int32
                          type: integer
                        initializingShards:
                          description: The number of Initializing Shards for the Elasticsearch
                            Cluster
                          format: int32
                          type: integer
                        numDataNodes:
                          description: The number of Data Nodes for the Elasticsearch
                            Cluster
                          format: int32
                          type: integer
                        numNodes:
                          description: The number of Nodes for the Elasticsearch Cluster
                          format: int32
                          type: integer
                        pendingTasks:
                          format: int32
                          type: integer
                        relocatingShards:
                          description: The number of Relocating Shards for the Elasticsearch
                            Cluster
                          format: int32
                          type: integer
                        status:
                          description: The current Status of the Elasticsearch Cluster
                          type: string
                        unassignedShards:
                          description: The number of Unassigned Shards for the Elasticsearch
                            Cluster
                          format: int32
                          type: integer
                      required:
                      - activePrimaryShards
                      - activeShards
                      - initializingShards
                      - numDataNodes
                      - numNodes
                      - pendingTasks
                      - relocatingShards
                      - status
                      - unassignedShards
                      type: object
                    clusterConditions:
                      items:
                        description: Conditions is a set of Condition instances.
                        items:
                          description: "Condition represents an observation of an
                            object's state. Conditions are an extension mechanism
                            intended to be used when the details of an observation
                            are not a priori known or would not apply to all instances
                            of a given Kind. \n Conditions should be added to explicitly
                            convey properties that users and components care about
                            rather than requiring those properties to be inferred
                            from other observations. Once defined, the meaning of
                            a Condition can not be changed arbitrarily - it becomes
                            part of the API, and has the same backwards- and forwards-compatibility
                            concerns of any other part of the API."
                          properties:
                            lastTransitionTime:
                              format: date-time
                              type: string
                            message:
                              type: string
                            reason:
                              description: ConditionReason is intended to be a one-word,
                                CamelCase representation of the category of cause
                                of the current status. It is intended to be used in
                                concise output, such as one-line kubectl get output,
                                and in summarizing occurrences of causes.
                              type: string
                            status:
                              type: string
                            type:
                              description: "ConditionType is the type of the condition
                                and is typically a CamelCased word or short phrase.
                                \n Condition types should indicate state in the \"abnormal-true\"
                                polarity. For example, if the condition indicates
                                when a policy is invalid, the \"is valid\" case is
                                probably the norm, so the condition should be called
                                \"Invalid\"."
                              type: string
                          required:
                          - status
                          - type
                          type: object
                        type: array
                      type: array
                    clusterHealth:
                      type: string
                    clusterName:
                      type: string
                    deployments:
                      items:
                        type: string
                      type: array
                    nodeConditions:
                      additionalProperties:
                        items:
                          description: Conditions is a set of Condition instances.
                          items:
                            description: "Condition represents an observation of an
                              object's state. Conditions are an extension mechanism
                              intended to be used when the details of an observation
                              are not a priori known or would not apply to all instances
                              of a given Kind. \n Conditions should be added to explicitly
                              convey properties that users and components care about
                              rather than requiring those properties to be inferred
                              from other observations. Once defined, the meaning of
                              a Condition can not be changed arbitrarily - it becomes
                              part of the API, and has the same backwards- and forwards-compatibility
                              concerns of any other part of the API."
                            properties:
                              lastTransitionTime:
                                format: date-time
                                type: string
                              message:
                                type: string
                              reason:
                                description: ConditionReason is intended to be a one-word,
                                  CamelCase representation of the category of cause
                                  of the current status. It is intended to be used
                                  in concise output, such as one-line kubectl get
                                  output, and in summarizing occurrences of causes.
                                type: string
                              status:
                                type: string
                              type:
                                description: "ConditionType is the type of the condition
                                  and is typically a CamelCased word or short phrase.
                                  \n Condition types should indicate state in the
                                  \"abnormal-true\" polarity. For example, if the
                                  condition indicates when a policy is invalid, the
                                  \"is valid\" case is probably the norm, so the condition
                                  should be called \"Invalid\"."
                                type: string
                            required:
                            - status
                            - type
                            type: object
                          type: array
                        type: array
                      type: object
                    nodeCount:
                      format: int32
                      type: integer
                    pods:
                      additionalProperties:
                        additionalProperties:
                          items:
                            type: string
                          type: array
                        type: object
                      type: object
                    replicaSets:
                      items:
                        type: string
                      type: array
                    shardAllocationEnabled:
                      type: string
                    statefulSets:
                      items:
                        type: string
                      type: array
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
