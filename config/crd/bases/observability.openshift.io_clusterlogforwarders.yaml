---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.2
  creationTimestamp: null
  name: clusterlogforwarders.observability.openshift.io
spec:
  group: observability.openshift.io
  names:
    categories:
    - observability
    kind: ClusterLogForwarder
    listKind: ClusterLogForwarderList
    plural: clusterlogforwarders
    shortNames:
    - clf
    singular: clusterlogforwarder
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: "ClusterLogForwarder is an API to configure forwarding logs.
          \n You configure forwarding by specifying a list of `pipelines`, which forward
          from a set of named inputs to a set of named outputs."
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ClusterLogForwarderSpec defines the desired state of ClusterLogForwarder
            properties:
              collector:
                description: Specification of the Collector deployment to define resource
                  limits and workload placement
                properties:
                  nodeSelector:
                    additionalProperties:
                      type: string
                    description: Define nodes for scheduling the pods.
                    nullable: true
                    type: object
                  resources:
                    description: The resource requirements for the collector
                    nullable: true
                    properties:
                      claims:
                        description: "Claims lists the names of resources, defined
                          in spec.resourceClaims, that are used by this container.
                          \n This is an alpha field and requires enabling the DynamicResourceAllocation
                          feature gate. \n This field is immutable. It can only be
                          set for containers."
                        items:
                          description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                          properties:
                            name:
                              description: Name must match the name of one entry in
                                pod.spec.resourceClaims of the Pod where this field
                                is used. It makes that resource available inside a
                                container.
                              type: string
                          required:
                          - name
                          type: object
                        type: array
                        x-kubernetes-list-map-keys:
                        - name
                        x-kubernetes-list-type: map
                      limits:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Limits describes the maximum amount of compute
                          resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                      requests:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Requests describes the minimum amount of compute
                          resources required. If Requests is omitted for a container,
                          it defaults to Limits if that is explicitly specified, otherwise
                          to an implementation-defined value. Requests cannot exceed
                          Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                    type: object
                  tolerations:
                    description: Define the tolerations the collector pods will accept
                    items:
                      description: The pod this Toleration is attached to tolerates
                        any taint that matches the triple <key,value,effect> using
                        the matching operator <operator>.
                      properties:
                        effect:
                          description: Effect indicates the taint effect to match.
                            Empty means match all taint effects. When specified, allowed
                            values are NoSchedule, PreferNoSchedule and NoExecute.
                          type: string
                        key:
                          description: Key is the taint key that the toleration applies
                            to. Empty means match all taint keys. If the key is empty,
                            operator must be Exists; this combination means to match
                            all values and all keys.
                          type: string
                        operator:
                          description: Operator represents a key's relationship to
                            the value. Valid operators are Exists and Equal. Defaults
                            to Equal. Exists is equivalent to wildcard for value,
                            so that a pod can tolerate all taints of a particular
                            category.
                          type: string
                        tolerationSeconds:
                          description: TolerationSeconds represents the period of
                            time the toleration (which must be of effect NoExecute,
                            otherwise this field is ignored) tolerates the taint.
                            By default, it is not set, which means tolerate the taint
                            forever (do not evict). Zero and negative values will
                            be treated as 0 (evict immediately) by the system.
                          format: int64
                          type: integer
                        value:
                          description: Value is the taint value the toleration matches
                            to. If the operator is Exists, the value should be empty,
                            otherwise just a regular string.
                          type: string
                      type: object
                    nullable: true
                    type: array
                type: object
              filters:
                description: Filters are applied to log records passing through a
                  pipeline. There are different types of filter that can select and
                  modify log records in different ways. See [FilterTypeSpec] for a
                  list of filter types.
                items:
                  description: FilterSpec defines a filter for log messages.
                  properties:
                    drop:
                      description: A drop filter applies a sequence of tests to a
                        log record and drops the record if any test passes. Each test
                        contains a sequence of conditions, all conditions must be
                        true for the test to pass. A DropTestsSpec contains an array
                        of tests which contains an array of conditions
                      items:
                        properties:
                          test:
                            description: DropConditions is an array of DropCondition
                              which are conditions that are ANDed together
                            items:
                              properties:
                                field:
                                  description: 'A dot delimited path to a field in
                                    the log record. It must start with a `.`. The
                                    path can contain alpha-numeric characters and
                                    underscores (a-zA-Z0-9_). If segments contain
                                    characters outside of this range, the segment
                                    must be quoted. Examples: `.kubernetes.namespace_name`,
                                    `.log_type`, ''.kubernetes.labels.foobar'', `.kubernetes.labels."foo-bar/baz"`'
                                  type: string
                                matches:
                                  description: A regular expression that the field
                                    will match. If the value of the field defined
                                    in the DropTest matches the regular expression,
                                    the log record will be dropped. Must define only
                                    one of matches OR notMatches
                                  type: string
                                notMatches:
                                  description: A regular expression that the field
                                    does not match. If the value of the field defined
                                    in the DropTest does not match the regular expression,
                                    the log record will be dropped. Must define only
                                    one of matches or notMatches
                                  type: string
                              type: object
                            type: array
                        type: object
                      type: array
                    kubeAPIAudit:
                      description: "KubeAPIAudit filter Kube API server audit logs,
                        as described in [Kubernetes Auditing]. \n # Policy Filtering
                        \n Policy event rules are the same format as the [Kube Audit
                        Policy] with some minor extensions. The extensions are described
                        here, see the [Kube Audit Policy] for the standard rule behavior.
                        Rules are checked in order, checking stops at the first matching
                        rule. \n An audit policy event contains meta-data describing
                        who made the request. It can also include the full body of
                        the API request, and the response that was sent. The `level`
                        of an audit rule determines how much data is included in the
                        event: \n - None: the event is dropped. - Metadata: Only the
                        audit metadata is included, request and response bodies are
                        removed. - Request: Audit metadata and the request body are
                        included, the response body is removed. - RequestResponse:
                        All data is included: metadata, request body and response
                        body. Note the response body can be very large. For example
                        the a command like `oc get -A pods` generates a response body
                        containing the YAML description of every pod in the cluster.
                        \n # Extensions \n The following features are extensions to
                        the standard [Kube Audit Policy] \n ## Wildcards \n Names
                        of users, groups, namespaces, and resources can have a leading
                        or trailing '*' character. For example namespace 'openshift-*'
                        matches 'openshift-apiserver' or 'openshift-authentication.
                        Resource '*/status' matches 'Pod/status' or 'Deployment/status'
                        \n ## Default Rules \n Events that do not match any rule in
                        the policy are filtered as follows: - User events (ie. non-system
                        and non-serviceaccount) are forwarded - Read-only system events
                        (get/list/watch etc) are dropped - Service account write events
                        that occur within the same namespace as the service account
                        are dropped - All other events are forwarded, subject to any
                        configured [rate limits][#rate-lmiting] \n If you want to
                        disable these defaults, end your rules list with rule that
                        has only a `level` field. An empty rule matches any event,
                        and prevents the defaults from taking effect. \n ## Omit Response
                        Codes \n You can drop events based on the HTTP status code
                        in the response. See the OmitResponseCodes field. \n [Kube
                        Audit Policy]: https://kubernetes.io/docs/reference/config-api/apiserver-audit.v1/#audit-k8s-io-v1-Policy
                        [Kubernetes Auditing]: https://kubernetes.io/docs/tasks/debug/debug-cluster/audit/"
                      properties:
                        omitResponseCodes:
                          description: OmitResponseCodes is a list of HTTP status
                            code for which no events are created. If this field is
                            missing or null, the default value used is [404, 409,
                            422, 429] (NotFound, Conflict, UnprocessableEntity, TooManyRequests)
                            If it is the empty list [], then no status codes are omitted.
                            Otherwise, this field should be a list of integer status
                            codes to omit.
                          items:
                            type: integer
                          type: array
                        omitStages:
                          description: OmitStages is a list of stages for which no
                            events are created. Note that this can also be specified
                            per rule in which case the union of both are omitted.
                          items:
                            description: Stage defines the stages in request handling
                              that audit events may be generated.
                            type: string
                          type: array
                        rules:
                          description: "Rules specify the audit Level a request should
                            be recorded at. A request may match multiple rules, in
                            which case the FIRST matching rule is used. PolicyRules
                            are strictly ordered. \n If Rules is empty or missing
                            default rules apply, see [KubeAPIAudit]"
                          items:
                            description: PolicyRule maps requests based off metadata
                              to an audit Level. Requests must match the rules of
                              every field (an intersection of rules).
                            properties:
                              level:
                                description: The Level that requests matching this
                                  rule are recorded at.
                                type: string
                              namespaces:
                                description: Namespaces that this rule matches. The
                                  empty string "" matches non-namespaced resources.
                                  An empty list implies every namespace.
                                items:
                                  type: string
                                type: array
                              nonResourceURLs:
                                description: 'NonResourceURLs is a set of URL paths
                                  that should be audited. `*`s are allowed, but only
                                  as the full, final step in the path. Examples: -
                                  `/metrics` - Log requests for apiserver metrics
                                  - `/healthz*` - Log all health checks'
                                items:
                                  type: string
                                type: array
                              omitManagedFields:
                                description: OmitManagedFields indicates whether to
                                  omit the managed fields of the request and response
                                  bodies from being written to the API audit log.
                                  - a value of 'true' will drop the managed fields
                                  from the API audit log - a value of 'false' indicates
                                  that the managed fileds should be included in the
                                  API audit log Note that the value, if specified,
                                  in this rule will override the global default If
                                  a value is not specified then the global default
                                  specified in Policy.OmitManagedFields will stand.
                                type: boolean
                              omitStages:
                                description: OmitStages is a list of stages for which
                                  no events are created. Note that this can also be
                                  specified policy wide in which case the union of
                                  both are omitted. An empty list means no restrictions
                                  will apply.
                                items:
                                  description: Stage defines the stages in request
                                    handling that audit events may be generated.
                                  type: string
                                type: array
                              resources:
                                description: Resources that this rule matches. An
                                  empty list implies all kinds in all API groups.
                                items:
                                  description: GroupResources represents resource
                                    kinds in an API group.
                                  properties:
                                    group:
                                      description: Group is the name of the API group
                                        that contains the resources. The empty string
                                        represents the core API group.
                                      type: string
                                    resourceNames:
                                      description: ResourceNames is a list of resource
                                        instance names that the policy matches. Using
                                        this field requires Resources to be specified.
                                        An empty list implies that every instance
                                        of the resource is matched.
                                      items:
                                        type: string
                                      type: array
                                    resources:
                                      description: "Resources is a list of resources
                                        this rule applies to. \n For example: - `pods`
                                        matches pods. - `pods/log` matches the log
                                        subresource of pods. - `*` matches all resources
                                        and their subresources. - `pods/*` matches
                                        all subresources of pods. - `*/scale` matches
                                        all scale subresources. \n If wildcard is
                                        present, the validation rule will ensure resources
                                        do not overlap with each other. \n An empty
                                        list implies all resources and subresources
                                        in this API groups apply."
                                      items:
                                        type: string
                                      type: array
                                  type: object
                                type: array
                              userGroups:
                                description: The user groups this rule applies to.
                                  A user is considered matching if it is a member
                                  of any of the UserGroups. An empty list implies
                                  every user group.
                                items:
                                  type: string
                                type: array
                              users:
                                description: The users (by authenticated user name)
                                  this rule applies to. An empty list implies every
                                  user.
                                items:
                                  type: string
                                type: array
                              verbs:
                                description: The verbs that match this rule. An empty
                                  list implies every verb.
                                items:
                                  type: string
                                type: array
                            required:
                            - level
                            type: object
                          type: array
                      type: object
                    name:
                      description: Name used to refer to the filter from a `pipeline`.
                      type: string
                    openShiftLabels:
                      additionalProperties:
                        type: string
                      description: Labels applied to log records passing through a
                        pipeline. These labels appear in the `openshift.labels` map
                        in the log record.
                      type: object
                    prune:
                      description: The PruneFilterSpec consists of two arrays, namely
                        in and notIn, which dictate the fields to be pruned.
                      properties:
                        in:
                          description: '`In` is an array of dot-delimited field paths.
                            Fields included here are removed from the log record.
                            Each field path expression must start with a `.`. The
                            path can contain alpha-numeric characters and underscores
                            (a-zA-Z0-9_). If segments contain characters outside of
                            this range, the segment must be quoted otherwise paths
                            do NOT need to be quoted. Examples: `.kubernetes.namespace_name`,
                            `.log_type`, ''.kubernetes.labels.foobar'', `.kubernetes.labels."foo-bar/baz"`
                            NOTE1: `In` CANNOT contain `.log_type` or `.message` as
                            those fields are required and cannot be pruned. NOTE2:
                            If this filter is used in a pipeline with GoogleCloudLogging,
                            `.hostname` CANNOT be added to this list as it is a required
                            field.'
                          items:
                            type: string
                          type: array
                        notIn:
                          description: '`NotIn` is an array of dot-delimited field
                            paths. All fields besides the ones listed here are removed
                            from the log record Each field path expression must start
                            with a `.`. The path can contain alpha-numeric characters
                            and underscores (a-zA-Z0-9_). If segments contain characters
                            outside of this range, the segment must be quoted otherwise
                            paths do NOT need to be quoted. Examples: `.kubernetes.namespace_name`,
                            `.log_type`, ''.kubernetes.labels.foobar'', `.kubernetes.labels."foo-bar/baz"`
                            NOTE1: `NotIn` MUST contain `.log_type` and `.message`
                            as those fields are required and cannot be pruned. NOTE2:
                            If this filter is used in a pipeline with GoogleCloudLogging,
                            `.hostname` MUST be added to this list as it is a required
                            field.'
                          items:
                            type: string
                          type: array
                      type: object
                    type:
                      description: Type of filter.
                      enum:
                      - openShiftLabels
                      - detectMultilineException
                      - drop
                      - kubeAPIAudit
                      - parse
                      - prune
                      type: string
                  required:
                  - name
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - name
                x-kubernetes-list-type: map
              inputs:
                description: "Inputs are named filters for log messages to be forwarded.
                  \n There are three built-in inputs named `application`, `infrastructure`
                  and `audit`. You don't need to define inputs here if those are sufficient
                  for your needs. See `inputRefs` for more."
                items:
                  description: InputSpec defines a selector of log messages for a
                    given log type.
                  properties:
                    application:
                      description: Application, named set of `application` logs that
                        can specify a set of match criteria
                      nullable: true
                      properties:
                        excludes:
                          description: Excludes is the set of namespaces and containers
                            to ignore when collecting logs. Takes precedence over
                            Includes option.
                          items:
                            properties:
                              container:
                                description: Container spec the containers from which
                                  to collect logs Supports glob patterns and presumes
                                  "*" if omitted.
                                type: string
                              namespace:
                                description: Namespace specs the namespace from which
                                  to collect logs Supports glob patterns and presumes
                                  "*" if omitted.
                                type: string
                            type: object
                          type: array
                        includes:
                          description: 'Includes is the set of namespaces and containers
                            to include when collecting logs. Note: infrastructure
                            namespaces are still excluded for "*" values unless a
                            qualifying glob pattern is specified.'
                          items:
                            properties:
                              container:
                                description: Container spec the containers from which
                                  to collect logs Supports glob patterns and presumes
                                  "*" if omitted.
                                type: string
                              namespace:
                                description: Namespace specs the namespace from which
                                  to collect logs Supports glob patterns and presumes
                                  "*" if omitted.
                                type: string
                            type: object
                          type: array
                        selector:
                          description: Selector for logs from pods with matching labels.
                            Only messages from pods with these labels are collected.
                            If absent or empty, logs are collected regardless of labels.
                          properties:
                            matchExpressions:
                              description: matchExpressions is a list of label selector
                                requirements. The requirements are ANDed.
                              items:
                                description: A label selector requirement is a selector
                                  that contains values, a key, and an operator that
                                  relates the key and values.
                                properties:
                                  key:
                                    description: key is the label key that the selector
                                      applies to.
                                    type: string
                                  operator:
                                    description: operator represents a key's relationship
                                      to a set of values. Valid operators are In,
                                      NotIn, Exists and DoesNotExist.
                                    type: string
                                  values:
                                    description: values is an array of string values.
                                      If the operator is In or NotIn, the values array
                                      must be non-empty. If the operator is Exists
                                      or DoesNotExist, the values array must be empty.
                                      This array is replaced during a strategic merge
                                      patch.
                                    items:
                                      type: string
                                    type: array
                                required:
                                - key
                                - operator
                                type: object
                              type: array
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: matchLabels is a map of {key,value} pairs.
                                A single {key,value} in the matchLabels map is equivalent
                                to an element of matchExpressions, whose key field
                                is "key", the operator is "In", and the values array
                                contains only "value". The requirements are ANDed.
                              type: object
                          type: object
                          x-kubernetes-map-type: atomic
                        tuning:
                          description: Tuning is the container input tuning spec for
                            this container sources
                          properties:
                            rateLimitPerContainer:
                              description: RateLimitPerContainer is the limit applied
                                to each container by this input. This limit is applied
                                per collector deployment.
                              properties:
                                maxRecordsPerSecond:
                                  description: MaxRecordsPerSecond is the maximum
                                    number of log records allowed per input/output
                                    in a pipeline
                                  format: int64
                                  type: integer
                              required:
                              - maxRecordsPerSecond
                              type: object
                          type: object
                      type: object
                    audit:
                      description: Audit, enables `audit` logs.
                      properties:
                        sources:
                          description: Sources defines the list of audit sources to
                            collect. This field is optional and its exclusion results
                            in the collection of all audit sources.
                          items:
                            description: AuditSource defines which type of audit log
                              source is used.
                            enum:
                            - auditd
                            - kubeAPI
                            - openshiftAPI
                            - ovn
                            type: string
                          type: array
                      type: object
                    infrastructure:
                      description: Infrastructure, Enables `infrastructure` logs.
                      properties:
                        sources:
                          description: Sources defines the list of infrastructure
                            sources to collect. This field is optional and omission
                            results in the collection of all infrastructure sources.
                          items:
                            description: InfrastructureSource defines the type of
                              infrastructure log source to use.
                            enum:
                            - container
                            - node
                            type: string
                          type: array
                      type: object
                    name:
                      description: Name used to refer to the input of a `pipeline`.
                      type: string
                    receiver:
                      description: Receiver to receive logs from non-cluster sources.
                      properties:
                        http:
                          description: HTTPReceiver receives encoded logs as a HTTP
                            endpoint.
                          properties:
                            format:
                              description: Format is the format of incoming log data.
                              enum:
                              - kubeAPIAudit
                              type: string
                          required:
                          - format
                          type: object
                        port:
                          default: 8443
                          description: Port the Receiver listens on. It must be a
                            value between 1024 and 65535
                          format: int32
                          maximum: 65535
                          minimum: 1024
                          type: integer
                        tls:
                          description: TLS contains settings for controlling options
                            of TLS connections.
                          properties:
                            ca:
                              description: CA can be used to specify a custom list
                                of trusted certificate authorities.
                              properties:
                                configMap:
                                  description: Use ConfigMap if the value should be
                                    sourced from a ConfigMap in the same namespace.
                                  properties:
                                    name:
                                      description: 'Name of the referent. More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields. apiVersion,
                                        kind, uid?'
                                      type: string
                                  type: object
                                  x-kubernetes-map-type: atomic
                                key:
                                  description: Name of the key used to get the value
                                    in either the referenced ConfigMap or Secret.
                                  type: string
                                secret:
                                  description: Use Secret if the value should be sourced
                                    from a Secret in the same namespace.
                                  properties:
                                    name:
                                      description: 'Name of the referent. More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields. apiVersion,
                                        kind, uid?'
                                      type: string
                                  type: object
                                  x-kubernetes-map-type: atomic
                              required:
                              - key
                              type: object
                            certificate:
                              description: Certificate points to the server certificate
                                to use.
                              properties:
                                configMap:
                                  description: Use ConfigMap if the value should be
                                    sourced from a ConfigMap in the same namespace.
                                  properties:
                                    name:
                                      description: 'Name of the referent. More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields. apiVersion,
                                        kind, uid?'
                                      type: string
                                  type: object
                                  x-kubernetes-map-type: atomic
                                key:
                                  description: Name of the key used to get the value
                                    in either the referenced ConfigMap or Secret.
                                  type: string
                                secret:
                                  description: Use Secret if the value should be sourced
                                    from a Secret in the same namespace.
                                  properties:
                                    name:
                                      description: 'Name of the referent. More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields. apiVersion,
                                        kind, uid?'
                                      type: string
                                  type: object
                                  x-kubernetes-map-type: atomic
                              required:
                              - key
                              type: object
                            key:
                              description: Key points to the private key of the server
                                certificate.
                              properties:
                                key:
                                  description: Name of the key used to get the value
                                    from the referenced Secret.
                                  type: string
                                secret:
                                  description: Use Secret if the value should be sourced
                                    from a Secret in the same namespace.
                                  properties:
                                    name:
                                      description: 'Name of the referent. More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields. apiVersion,
                                        kind, uid?'
                                      type: string
                                  type: object
                                  x-kubernetes-map-type: atomic
                              required:
                              - key
                              - secret
                              type: object
                            keyPassphrase:
                              description: KeyPassphrase points to the passphrase
                                used to unlock the private key.
                              properties:
                                key:
                                  description: Name of the key used to get the value
                                    from the referenced Secret.
                                  type: string
                                secret:
                                  description: Use Secret if the value should be sourced
                                    from a Secret in the same namespace.
                                  properties:
                                    name:
                                      description: 'Name of the referent. More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields. apiVersion,
                                        kind, uid?'
                                      type: string
                                  type: object
                                  x-kubernetes-map-type: atomic
                              required:
                              - key
                              - secret
                              type: object
                          type: object
                        type:
                          description: Type of Receiver plugin.
                          enum:
                          - http
                          - syslog
                          type: string
                      required:
                      - port
                      - type
                      type: object
                    type:
                      description: Type of output sink.
                      enum:
                      - audit
                      - application
                      - infrastructure
                      - receiver
                      type: string
                  required:
                  - name
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - name
                x-kubernetes-list-type: map
              outputs:
                description: Outputs are named destinations for log messages.
                items:
                  description: OutputSpec defines a destination for log messages.
                  properties:
                    azureMonitor:
                      properties:
                        authentication:
                          description: Authentication sets credentials for authenticating
                            the requests.
                          properties:
                            sharedKey:
                              description: SharedKey points to the secret containing
                                the shared key used for authenticating requests.
                              nullable: true
                              properties:
                                key:
                                  description: Name of the key used to get the value
                                    from the referenced Secret.
                                  type: string
                                secret:
                                  description: Use Secret if the value should be sourced
                                    from a Secret in the same namespace.
                                  properties:
                                    name:
                                      description: 'Name of the referent. More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields. apiVersion,
                                        kind, uid?'
                                      type: string
                                  type: object
                                  x-kubernetes-map-type: atomic
                              required:
                              - key
                              - secret
                              type: object
                          type: object
                        azureResourceId:
                          description: AzureResourceId the Resource ID of the Azure
                            resource the data should be associated with. https://learn.microsoft.com/en-us/azure/azure-monitor/logs/data-collector-api?tabs=powershell#request-headers
                          type: string
                        customerId:
                          description: CustomerId che unique identifier for the Log
                            Analytics workspace. https://learn.microsoft.com/en-us/azure/azure-monitor/logs/data-collector-api?tabs=powershell#request-uri-parameters
                          type: string
                        host:
                          description: Host alternative host for dedicated Azure regions.
                            (for example for China region) https://docs.azure.cn/en-us/articles/guidance/developerdifferences#check-endpoints-in-azure
                          type: string
                        logType:
                          description: LogType the record type of the data that is
                            being submitted. Can only contain letters, numbers, and
                            underscores (_), and may not exceed 100 characters. https://learn.microsoft.com/en-us/azure/azure-monitor/logs/data-collector-api?tabs=powershell#request-headers
                          type: string
                        tuning:
                          description: Tuning specs tuning for the output
                          properties:
                            delivery:
                              description: DeliveryMode sets the delivery mode for
                                log forwarding.
                              enum:
                              - atLeastOnce
                              - atMostOnce
                              type: string
                            maxRetryDuration:
                              description: MaxRetryDuration is the maximum time to
                                wait between retry attempts after a delivery failure.
                              format: int64
                              type: integer
                            maxWrite:
                              anyOf:
                              - type: integer
                              - type: string
                              description: MaxWrite limits the maximum payload in
                                terms of bytes of a single "send" to the output.
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            minRetryDuration:
                              description: MinRetryDuration is the minimum time to
                                wait between attempts to retry after delivery a failure.
                              format: int64
                              type: integer
                          type: object
                      type: object
                    cloudwatch:
                      description: Cloudwatch provides configuration for the output
                        type `cloudwatch`
                      properties:
                        authentication:
                          description: Authentication sets credentials for authenticating
                            the requests.
                          properties:
                            accessKeyID:
                              description: AccessKeyID points to the AWS access key
                                id to be used for authentication.
                              nullable: true
                              properties:
                                key:
                                  description: Name of the key used to get the value
                                    from the referenced Secret.
                                  type: string
                                secret:
                                  description: Use Secret if the value should be sourced
                                    from a Secret in the same namespace.
                                  properties:
                                    name:
                                      description: 'Name of the referent. More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields. apiVersion,
                                        kind, uid?'
                                      type: string
                                  type: object
                                  x-kubernetes-map-type: atomic
                              required:
                              - key
                              - secret
                              type: object
                            accessKeySecret:
                              description: AccessKeySecret points to the AWS access
                                key secret to be used for authentication.
                              nullable: true
                              properties:
                                key:
                                  description: Name of the key used to get the value
                                    from the referenced Secret.
                                  type: string
                                secret:
                                  description: Use Secret if the value should be sourced
                                    from a Secret in the same namespace.
                                  properties:
                                    name:
                                      description: 'Name of the referent. More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields. apiVersion,
                                        kind, uid?'
                                      type: string
                                  type: object
                                  x-kubernetes-map-type: atomic
                              required:
                              - key
                              - secret
                              type: object
                            credentials:
                              description: Credentials points to the secret containing
                                the "credentials file" to be used for authentication.
                                Mostly used for authentication in STS-enabled clusters.
                              nullable: true
                              properties:
                                key:
                                  description: Name of the key used to get the value
                                    from the referenced Secret.
                                  type: string
                                secret:
                                  description: Use Secret if the value should be sourced
                                    from a Secret in the same namespace.
                                  properties:
                                    name:
                                      description: 'Name of the referent. More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields. apiVersion,
                                        kind, uid?'
                                      type: string
                                  type: object
                                  x-kubernetes-map-type: atomic
                              required:
                              - key
                              - secret
                              type: object
                            roleARN:
                              description: RoleARN points to the secret containing
                                the role ARN to be used for authentication. This is
                                used for authentication in STS-enabled clusters.
                              nullable: true
                              properties:
                                key:
                                  description: Name of the key used to get the value
                                    from the referenced Secret.
                                  type: string
                                secret:
                                  description: Use Secret if the value should be sourced
                                    from a Secret in the same namespace.
                                  properties:
                                    name:
                                      description: 'Name of the referent. More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields. apiVersion,
                                        kind, uid?'
                                      type: string
                                  type: object
                                  x-kubernetes-map-type: atomic
                              required:
                              - key
                              - secret
                              type: object
                          type: object
                        groupBy:
                          description: GroupBy defines the strategy for grouping logstreams
                          enum:
                          - logType
                          - namespaceName
                          - namespaceUUID
                          type: string
                        groupPrefix:
                          description: "GroupPrefix Add this prefix to all group names.
                            \n Useful to avoid group name clashes if an AWS account
                            is used for multiple clusters and used verbatim (e.g.
                            \"\" means no prefix). The default prefix is cluster-name/log-type"
                          type: string
                        region:
                          type: string
                        tuning:
                          description: Tuning specs tuning for the output
                          nullable: true
                          properties:
                            compression:
                              default: none
                              description: Compression causes data to be compressed
                                before sending over the network. It is an error if
                                the compression type is not supported by the output.
                              enum:
                              - gzip
                              - none
                              - snappy
                              - zlib
                              - zstd
                              - lz4
                              type: string
                            delivery:
                              description: DeliveryMode sets the delivery mode for
                                log forwarding.
                              enum:
                              - atLeastOnce
                              - atMostOnce
                              type: string
                            maxRetryDuration:
                              description: MaxRetryDuration is the maximum time to
                                wait between retry attempts after a delivery failure.
                              format: int64
                              type: integer
                            maxWrite:
                              anyOf:
                              - type: integer
                              - type: string
                              description: MaxWrite limits the maximum payload in
                                terms of bytes of a single "send" to the output.
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            minRetryDuration:
                              description: MinRetryDuration is the minimum time to
                                wait between attempts to retry after delivery a failure.
                              format: int64
                              type: integer
                          type: object
                        url:
                          description: "URL to send log records to. \n The 'username@password'
                            part of `url` is ignored."
                          type: string
                      required:
                      - groupBy
                      - region
                      type: object
                    elasticsearch:
                      properties:
                        authentication:
                          description: Authentication sets credentials for authenticating
                            the requests.
                          properties:
                            password:
                              description: Password to use for authenticating requests.
                              nullable: true
                              properties:
                                key:
                                  description: Name of the key used to get the value
                                    from the referenced Secret.
                                  type: string
                                secret:
                                  description: Use Secret if the value should be sourced
                                    from a Secret in the same namespace.
                                  properties:
                                    name:
                                      description: 'Name of the referent. More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields. apiVersion,
                                        kind, uid?'
                                      type: string
                                  type: object
                                  x-kubernetes-map-type: atomic
                              required:
                              - key
                              - secret
                              type: object
                            token:
                              description: Token specifies a bearer token to be used
                                for authenticating requests.
                              nullable: true
                              properties:
                                key:
                                  description: Name of the key used to get the value
                                    from the referenced Secret.
                                  type: string
                                secret:
                                  description: Use Secret if the value should be sourced
                                    from a Secret in the same namespace.
                                  properties:
                                    name:
                                      description: 'Name of the referent. More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields. apiVersion,
                                        kind, uid?'
                                      type: string
                                  type: object
                                  x-kubernetes-map-type: atomic
                                serviceAccount:
                                  description: ServiceAccount contains the name of
                                    the Kubernetes ServiceAccount that should be used
                                    for getting a token for authenticating requests.
                                  properties:
                                    name:
                                      description: 'Name of the referent. More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields. apiVersion,
                                        kind, uid?'
                                      type: string
                                  type: object
                                  x-kubernetes-map-type: atomic
                              type: object
                            username:
                              description: Username to use for authenticating requests.
                              nullable: true
                              properties:
                                key:
                                  description: Name of the key used to get the value
                                    from the referenced Secret.
                                  type: string
                                secret:
                                  description: Use Secret if the value should be sourced
                                    from a Secret in the same namespace.
                                  properties:
                                    name:
                                      description: 'Name of the referent. More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields. apiVersion,
                                        kind, uid?'
                                      type: string
                                  type: object
                                  x-kubernetes-map-type: atomic
                              required:
                              - key
                              - secret
                              type: object
                          type: object
                        index:
                          default: '{{.log_type}}'
                          description: Index is the tenant for the logs. This supports
                            template syntax to allow dynamic per-event values. Defaults
                            to the log type (i.e. application, audit, infrastructure)
                          type: string
                        tuning:
                          description: Tuning specs tuning for the output
                          properties:
                            compression:
                              default: none
                              description: Compression causes data to be compressed
                                before sending over the network.
                              enum:
                              - none
                              - gzip
                              - zlib
                              - zstd
                              type: string
                            delivery:
                              description: DeliveryMode sets the delivery mode for
                                log forwarding.
                              enum:
                              - atLeastOnce
                              - atMostOnce
                              type: string
                            maxRetryDuration:
                              description: MaxRetryDuration is the maximum time to
                                wait between retry attempts after a delivery failure.
                              format: int64
                              type: integer
                            maxWrite:
                              anyOf:
                              - type: integer
                              - type: string
                              description: MaxWrite limits the maximum payload in
                                terms of bytes of a single "send" to the output.
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            minRetryDuration:
                              description: MinRetryDuration is the minimum time to
                                wait between attempts to retry after delivery a failure.
                              format: int64
                              type: integer
                          type: object
                        url:
                          description: "URL to send log records to. \n An absolute
                            URL, with a scheme. Valid schemes depend on `type`. Special
                            schemes `tcp`, `tls`, `udp` and `udps` are used for types
                            that have no scheme of their own. For example, to send
                            syslog records using secure UDP: \n { type: syslog, url:
                            udps://syslog.example.com:1234 } \n Basic TLS is enabled
                            if the URL scheme requires it (for example 'https' or
                            'tls'). The 'username@password' part of `url` is ignored."
                          type: string
                        version:
                          default: 8
                          description: 'Version specifies the version of Elasticsearch
                            to be used. Must be one of: 6-8, where 8 is the default'
                          maximum: 8
                          minimum: 6
                          type: integer
                      required:
                      - url
                      type: object
                    googleCloudLogging:
                      description: GoogleCloudLogging provides configuration for sending
                        logs to Google Cloud Logging. Exactly one of billingAccountID,
                        organizationID, folderID, or projectID must be set.
                      properties:
                        authentication:
                          description: Authentication sets credentials for authenticating
                            the requests.
                          properties:
                            credentials:
                              description: Credentials points to the secret containing
                                the `google-application-credentials.json`.
                              properties:
                                key:
                                  description: Name of the key used to get the value
                                    from the referenced Secret.
                                  type: string
                                secret:
                                  description: Use Secret if the value should be sourced
                                    from a Secret in the same namespace.
                                  properties:
                                    name:
                                      description: 'Name of the referent. More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields. apiVersion,
                                        kind, uid?'
                                      type: string
                                  type: object
                                  x-kubernetes-map-type: atomic
                              required:
                              - key
                              - secret
                              type: object
                          required:
                          - credentials
                          type: object
                        billingAccountId:
                          type: string
                        folderId:
                          type: string
                        logId:
                          description: LogID is the log ID to which to publish logs.
                            This identifies log stream.
                          type: string
                        organizationId:
                          type: string
                        projectId:
                          type: string
                        tuning:
                          description: Tuning specs tuning for the output
                          properties:
                            delivery:
                              description: DeliveryMode sets the delivery mode for
                                log forwarding.
                              enum:
                              - atLeastOnce
                              - atMostOnce
                              type: string
                            maxRetryDuration:
                              description: MaxRetryDuration is the maximum time to
                                wait between retry attempts after a delivery failure.
                              format: int64
                              type: integer
                            maxWrite:
                              anyOf:
                              - type: integer
                              - type: string
                              description: MaxWrite limits the maximum payload in
                                terms of bytes of a single "send" to the output.
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            minRetryDuration:
                              description: MinRetryDuration is the minimum time to
                                wait between attempts to retry after delivery a failure.
                              format: int64
                              type: integer
                          type: object
                      type: object
                    http:
                      description: HTTP provided configuration for sending json encoded
                        logs to a generic HTTP endpoint.
                      properties:
                        authentication:
                          description: Authentication sets credentials for authenticating
                            the requests.
                          properties:
                            password:
                              description: Password to use for authenticating requests.
                              nullable: true
                              properties:
                                key:
                                  description: Name of the key used to get the value
                                    from the referenced Secret.
                                  type: string
                                secret:
                                  description: Use Secret if the value should be sourced
                                    from a Secret in the same namespace.
                                  properties:
                                    name:
                                      description: 'Name of the referent. More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields. apiVersion,
                                        kind, uid?'
                                      type: string
                                  type: object
                                  x-kubernetes-map-type: atomic
                              required:
                              - key
                              - secret
                              type: object
                            token:
                              description: Token specifies a bearer token to be used
                                for authenticating requests.
                              nullable: true
                              properties:
                                key:
                                  description: Name of the key used to get the value
                                    from the referenced Secret.
                                  type: string
                                secret:
                                  description: Use Secret if the value should be sourced
                                    from a Secret in the same namespace.
                                  properties:
                                    name:
                                      description: 'Name of the referent. More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields. apiVersion,
                                        kind, uid?'
                                      type: string
                                  type: object
                                  x-kubernetes-map-type: atomic
                                serviceAccount:
                                  description: ServiceAccount contains the name of
                                    the Kubernetes ServiceAccount that should be used
                                    for getting a token for authenticating requests.
                                  properties:
                                    name:
                                      description: 'Name of the referent. More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields. apiVersion,
                                        kind, uid?'
                                      type: string
                                  type: object
                                  x-kubernetes-map-type: atomic
                              type: object
                            username:
                              description: Username to use for authenticating requests.
                              nullable: true
                              properties:
                                key:
                                  description: Name of the key used to get the value
                                    from the referenced Secret.
                                  type: string
                                secret:
                                  description: Use Secret if the value should be sourced
                                    from a Secret in the same namespace.
                                  properties:
                                    name:
                                      description: 'Name of the referent. More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields. apiVersion,
                                        kind, uid?'
                                      type: string
                                  type: object
                                  x-kubernetes-map-type: atomic
                              required:
                              - key
                              - secret
                              type: object
                          type: object
                        headers:
                          additionalProperties:
                            type: string
                          description: Headers specify optional headers to be sent
                            with the request
                          type: object
                        method:
                          description: Method specifies the Http method to be used
                            for sending logs. If not set, 'POST' is used.
                          enum:
                          - GET
                          - HEAD
                          - POST
                          - PUT
                          - DELETE
                          - OPTIONS
                          - TRACE
                          - PATCH
                          type: string
                        timeout:
                          description: Timeout specifies the Http request timeout
                            in seconds. If not set, 10secs is used.
                          type: integer
                        tuning:
                          description: Tuning specs tuning for the output
                          nullable: true
                          properties:
                            compression:
                              default: none
                              description: Compression causes data to be compressed
                                before sending over the network.
                              enum:
                              - none
                              - gzip
                              - snappy
                              - zlib
                              type: string
                            delivery:
                              description: DeliveryMode sets the delivery mode for
                                log forwarding.
                              enum:
                              - atLeastOnce
                              - atMostOnce
                              type: string
                            maxRetryDuration:
                              description: MaxRetryDuration is the maximum time to
                                wait between retry attempts after a delivery failure.
                              format: int64
                              type: integer
                            maxWrite:
                              anyOf:
                              - type: integer
                              - type: string
                              description: MaxWrite limits the maximum payload in
                                terms of bytes of a single "send" to the output.
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            minRetryDuration:
                              description: MinRetryDuration is the minimum time to
                                wait between attempts to retry after delivery a failure.
                              format: int64
                              type: integer
                          type: object
                        url:
                          description: "URL to send log records to. \n An absolute
                            URL, with a scheme. Valid schemes depend on `type`. Special
                            schemes `tcp`, `tls`, `udp` and `udps` are used for types
                            that have no scheme of their own. For example, to send
                            syslog records using secure UDP: \n { type: syslog, url:
                            udps://syslog.example.com:1234 } \n Basic TLS is enabled
                            if the URL scheme requires it (for example 'https' or
                            'tls'). The 'username@password' part of `url` is ignored."
                          type: string
                      required:
                      - url
                      type: object
                    kafka:
                      description: 'Kafka provides optional extra properties for `type:
                        kafka`'
                      properties:
                        authentication:
                          description: Authentication sets credentials for authenticating
                            the requests.
                          properties:
                            sasl:
                              description: SASL contains options configuring SASL
                                authentication.
                              properties:
                                mechanism:
                                  description: Mechanism sets the SASL mechanism to
                                    use.
                                  type: string
                                password:
                                  description: Username points to the secret to be
                                    used as SASL password.
                                  properties:
                                    key:
                                      description: Name of the key used to get the
                                        value from the referenced Secret.
                                      type: string
                                    secret:
                                      description: Use Secret if the value should
                                        be sourced from a Secret in the same namespace.
                                      properties:
                                        name:
                                          description: 'Name of the referent. More
                                            info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            TODO: Add other useful fields. apiVersion,
                                            kind, uid?'
                                          type: string
                                      type: object
                                      x-kubernetes-map-type: atomic
                                  required:
                                  - key
                                  - secret
                                  type: object
                                username:
                                  description: Username points to the secret to be
                                    used as SASL username.
                                  properties:
                                    key:
                                      description: Name of the key used to get the
                                        value from the referenced Secret.
                                      type: string
                                    secret:
                                      description: Use Secret if the value should
                                        be sourced from a Secret in the same namespace.
                                      properties:
                                        name:
                                          description: 'Name of the referent. More
                                            info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            TODO: Add other useful fields. apiVersion,
                                            kind, uid?'
                                          type: string
                                      type: object
                                      x-kubernetes-map-type: atomic
                                  required:
                                  - key
                                  - secret
                                  type: object
                              type: object
                          type: object
                        brokers:
                          description: Brokers specifies the list of broker endpoints
                            of a Kafka cluster. The list represents only the initial
                            set used by the collector's Kafka client for the first
                            connection only. The collector's Kafka client fetches
                            constantly an updated list from Kafka. These updates are
                            not reconciled back to the collector configuration. If
                            none provided the target URL from the OutputSpec is used
                            as fallback.
                          items:
                            type: string
                          type: array
                        topic:
                          description: Topic specifies the target topic to send logs
                            to.
                          type: string
                        tuning:
                          description: Tuning specs tuning for the output
                          nullable: true
                          properties:
                            compression:
                              default: none
                              description: Compression causes data to be compressed
                                before sending over the network.
                              enum:
                              - none
                              - snappy
                              - zstd
                              - lz4
                              type: string
                            delivery:
                              description: DeliveryMode sets the delivery mode for
                                log forwarding.
                              enum:
                              - atLeastOnce
                              - atMostOnce
                              type: string
                            maxWrite:
                              anyOf:
                              - type: integer
                              - type: string
                              description: MaxWrite limits the maximum payload in
                                terms of bytes of a single "send" to the output.
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                          type: object
                        url:
                          description: "URL to send log records to. \n An absolute
                            URL, with a scheme. Valid schemes depend on `type`. Special
                            schemes `tcp`, `tls`, `udp` and `udps` are used for types
                            that have no scheme of their own. For example, to send
                            syslog records using secure UDP: \n { type: syslog, url:
                            udps://syslog.example.com:1234 } \n Basic TLS is enabled
                            if the URL scheme requires it (for example 'https' or
                            'tls'). The 'username@password' part of `url` is ignored."
                          type: string
                      required:
                      - url
                      type: object
                    loki:
                      description: 'Loki provides optional extra properties for `type:
                        loki`'
                      properties:
                        authentication:
                          description: Authentication sets credentials for authenticating
                            the requests.
                          properties:
                            password:
                              description: Password to use for authenticating requests.
                              nullable: true
                              properties:
                                key:
                                  description: Name of the key used to get the value
                                    from the referenced Secret.
                                  type: string
                                secret:
                                  description: Use Secret if the value should be sourced
                                    from a Secret in the same namespace.
                                  properties:
                                    name:
                                      description: 'Name of the referent. More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields. apiVersion,
                                        kind, uid?'
                                      type: string
                                  type: object
                                  x-kubernetes-map-type: atomic
                              required:
                              - key
                              - secret
                              type: object
                            token:
                              description: Token specifies a bearer token to be used
                                for authenticating requests.
                              nullable: true
                              properties:
                                key:
                                  description: Name of the key used to get the value
                                    from the referenced Secret.
                                  type: string
                                secret:
                                  description: Use Secret if the value should be sourced
                                    from a Secret in the same namespace.
                                  properties:
                                    name:
                                      description: 'Name of the referent. More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields. apiVersion,
                                        kind, uid?'
                                      type: string
                                  type: object
                                  x-kubernetes-map-type: atomic
                                serviceAccount:
                                  description: ServiceAccount contains the name of
                                    the Kubernetes ServiceAccount that should be used
                                    for getting a token for authenticating requests.
                                  properties:
                                    name:
                                      description: 'Name of the referent. More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields. apiVersion,
                                        kind, uid?'
                                      type: string
                                  type: object
                                  x-kubernetes-map-type: atomic
                              type: object
                            username:
                              description: Username to use for authenticating requests.
                              nullable: true
                              properties:
                                key:
                                  description: Name of the key used to get the value
                                    from the referenced Secret.
                                  type: string
                                secret:
                                  description: Use Secret if the value should be sourced
                                    from a Secret in the same namespace.
                                  properties:
                                    name:
                                      description: 'Name of the referent. More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields. apiVersion,
                                        kind, uid?'
                                      type: string
                                  type: object
                                  x-kubernetes-map-type: atomic
                              required:
                              - key
                              - secret
                              type: object
                          type: object
                        labelKeys:
                          description: "LabelKeys is a list of log record keys that
                            will be used as Loki labels with the corresponding log
                            record value. \n If LabelKeys is not set, the default
                            keys are `[log_type, kubernetes.namespace_name, kubernetes.pod_name,
                            kubernetes_host]` \n Note: Loki label names must match
                            the regular expression \"[a-zA-Z_:][a-zA-Z0-9_:]*\" Log
                            record keys may contain characters like \".\" and \"/\"
                            that are not allowed in Loki labels. Log record keys are
                            translated to Loki labels by replacing any illegal characters
                            with '_'. For example the default log record keys translate
                            to these Loki labels: `log_type`, `kubernetes_namespace_name`,
                            `kubernetes_pod_name`, `kubernetes_host` \n Note: the
                            set of labels should be small, Loki imposes limits on
                            the size and number of labels allowed. See https://grafana.com/docs/loki/latest/configuration/#limits_config
                            for more. Loki queries can also query based on any log
                            record field (not just labels) using query filters."
                          items:
                            type: string
                          type: array
                        tenantKey:
                          default: '{{.log_type}}'
                          description: TenantKey is the tenant for the logs. This
                            supports vector's template syntax to allow dynamic per-event
                            values. Defaults to the log type (i.e. application, audit,
                            infrastructure)
                          type: string
                        tuning:
                          description: Tuning specs tuning for the output
                          nullable: true
                          properties:
                            compression:
                              default: snappy
                              description: Compression causes data to be compressed
                                before sending over the network.
                              enum:
                              - none
                              - gzip
                              - snappy
                              type: string
                            delivery:
                              description: DeliveryMode sets the delivery mode for
                                log forwarding.
                              enum:
                              - atLeastOnce
                              - atMostOnce
                              type: string
                            maxRetryDuration:
                              description: MaxRetryDuration is the maximum time to
                                wait between retry attempts after a delivery failure.
                              format: int64
                              type: integer
                            maxWrite:
                              anyOf:
                              - type: integer
                              - type: string
                              description: MaxWrite limits the maximum payload in
                                terms of bytes of a single "send" to the output.
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            minRetryDuration:
                              description: MinRetryDuration is the minimum time to
                                wait between attempts to retry after delivery a failure.
                              format: int64
                              type: integer
                          type: object
                        url:
                          description: "URL to send log records to. \n An absolute
                            URL, with a scheme. Valid schemes depend on `type`. Special
                            schemes `tcp`, `tls`, `udp` and `udps` are used for types
                            that have no scheme of their own. For example, to send
                            syslog records using secure UDP: \n { type: syslog, url:
                            udps://syslog.example.com:1234 } \n Basic TLS is enabled
                            if the URL scheme requires it (for example 'https' or
                            'tls'). The 'username@password' part of `url` is ignored."
                          type: string
                      required:
                      - url
                      type: object
                    lokiStack:
                      description: 'LokiStack provides optional extra properties for
                        `type: lokistack`'
                      properties:
                        authentication:
                          description: Authentication sets credentials for authenticating
                            the requests.
                          properties:
                            password:
                              description: Password to use for authenticating requests.
                              nullable: true
                              properties:
                                key:
                                  description: Name of the key used to get the value
                                    from the referenced Secret.
                                  type: string
                                secret:
                                  description: Use Secret if the value should be sourced
                                    from a Secret in the same namespace.
                                  properties:
                                    name:
                                      description: 'Name of the referent. More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields. apiVersion,
                                        kind, uid?'
                                      type: string
                                  type: object
                                  x-kubernetes-map-type: atomic
                              required:
                              - key
                              - secret
                              type: object
                            token:
                              description: Token specifies a bearer token to be used
                                for authenticating requests.
                              nullable: true
                              properties:
                                key:
                                  description: Name of the key used to get the value
                                    from the referenced Secret.
                                  type: string
                                secret:
                                  description: Use Secret if the value should be sourced
                                    from a Secret in the same namespace.
                                  properties:
                                    name:
                                      description: 'Name of the referent. More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields. apiVersion,
                                        kind, uid?'
                                      type: string
                                  type: object
                                  x-kubernetes-map-type: atomic
                                serviceAccount:
                                  description: ServiceAccount contains the name of
                                    the Kubernetes ServiceAccount that should be used
                                    for getting a token for authenticating requests.
                                  properties:
                                    name:
                                      description: 'Name of the referent. More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields. apiVersion,
                                        kind, uid?'
                                      type: string
                                  type: object
                                  x-kubernetes-map-type: atomic
                              type: object
                            username:
                              description: Username to use for authenticating requests.
                              nullable: true
                              properties:
                                key:
                                  description: Name of the key used to get the value
                                    from the referenced Secret.
                                  type: string
                                secret:
                                  description: Use Secret if the value should be sourced
                                    from a Secret in the same namespace.
                                  properties:
                                    name:
                                      description: 'Name of the referent. More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields. apiVersion,
                                        kind, uid?'
                                      type: string
                                  type: object
                                  x-kubernetes-map-type: atomic
                              required:
                              - key
                              - secret
                              type: object
                          type: object
                        labelKeys:
                          description: "LabelKeys is a list of log record keys that
                            will be used as Loki labels with the corresponding log
                            record value. \n If LabelKeys is not set, the default
                            keys are `[log_type, kubernetes.namespace_name, kubernetes.pod_name,
                            kubernetes_host]` \n Note: Loki label names must match
                            the regular expression \"[a-zA-Z_:][a-zA-Z0-9_:]*\" Log
                            record keys may contain characters like \".\" and \"/\"
                            that are not allowed in Loki labels. Log record keys are
                            translated to Loki labels by replacing any illegal characters
                            with '_'. For example the default log record keys translate
                            to these Loki labels: `log_type`, `kubernetes_namespace_name`,
                            `kubernetes_pod_name`, `kubernetes_host` \n Note: the
                            set of labels should be small, Loki imposes limits on
                            the size and number of labels allowed. See https://grafana.com/docs/loki/latest/configuration/#limits_config
                            for more. Loki queries can also query based on any log
                            record field (not just labels) using query filters."
                          items:
                            type: string
                          type: array
                        target:
                          description: Target points to the LokiStack resources that
                            should be used as a target for the output.
                          properties:
                            name:
                              description: Name of the in-cluster LokiStack resource.
                              type: string
                            namespace:
                              description: Namespace of the in-cluster LokiStack resource.
                              type: string
                          required:
                          - name
                          type: object
                        tuning:
                          description: Tuning specs tuning for the output
                          properties:
                            compression:
                              default: snappy
                              description: Compression causes data to be compressed
                                before sending over the network.
                              enum:
                              - none
                              - gzip
                              - snappy
                              type: string
                            delivery:
                              description: DeliveryMode sets the delivery mode for
                                log forwarding.
                              enum:
                              - atLeastOnce
                              - atMostOnce
                              type: string
                            maxRetryDuration:
                              description: MaxRetryDuration is the maximum time to
                                wait between retry attempts after a delivery failure.
                              format: int64
                              type: integer
                            maxWrite:
                              anyOf:
                              - type: integer
                              - type: string
                              description: MaxWrite limits the maximum payload in
                                terms of bytes of a single "send" to the output.
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            minRetryDuration:
                              description: MinRetryDuration is the minimum time to
                                wait between attempts to retry after delivery a failure.
                              format: int64
                              type: integer
                          type: object
                      required:
                      - target
                      type: object
                    name:
                      description: Name used to refer to the output from a `pipeline`.
                      type: string
                    rateLimit:
                      description: Limit imposes a limit in records-per-second on
                        the total aggregate rate of logs forwarded to this output
                        from any given collector container. The total log flow from
                        an individual collector container to this output cannot exceed
                        the limit.  Generally, one collector is deployed per cluster
                        node Logs may be dropped to enforce the limit. Missing or
                        0 means no rate limit.
                      properties:
                        maxRecordsPerSecond:
                          description: MaxRecordsPerSecond is the maximum number of
                            log records allowed per input/output in a pipeline
                          format: int64
                          type: integer
                      required:
                      - maxRecordsPerSecond
                      type: object
                    splunk:
                      description: 'Splunk Deliver log data to Splunk’s HTTP Event
                        Collector Provides optional extra properties for `type: splunk_hec`
                        (''splunk_hec_logs'' after Vector 0.23'
                      properties:
                        authentication:
                          description: Authentication sets credentials for authenticating
                            the requests.
                          properties:
                            token:
                              description: Token points to the secret containing the
                                Splunk HEC token used for authenticating requests.
                              properties:
                                key:
                                  description: Name of the key used to get the value
                                    from the referenced Secret.
                                  type: string
                                secret:
                                  description: Use Secret if the value should be sourced
                                    from a Secret in the same namespace.
                                  properties:
                                    name:
                                      description: 'Name of the referent. More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields. apiVersion,
                                        kind, uid?'
                                      type: string
                                  type: object
                                  x-kubernetes-map-type: atomic
                              required:
                              - key
                              - secret
                              type: object
                          type: object
                        index:
                          default: '{{.log_type}}'
                          description: Index is the tenant for the logs. This supports
                            template syntax to allow dynamic per-event values. Defaults
                            to the log type (i.e. application, audit, infrastructure)
                          type: string
                        tuning:
                          description: Tuning specs tuning for the output
                          nullable: true
                          properties:
                            delivery:
                              description: DeliveryMode sets the delivery mode for
                                log forwarding.
                              enum:
                              - atLeastOnce
                              - atMostOnce
                              type: string
                            maxRetryDuration:
                              description: MaxRetryDuration is the maximum time to
                                wait between retry attempts after a delivery failure.
                              format: int64
                              type: integer
                            maxWrite:
                              anyOf:
                              - type: integer
                              - type: string
                              description: MaxWrite limits the maximum payload in
                                terms of bytes of a single "send" to the output.
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            minRetryDuration:
                              description: MinRetryDuration is the minimum time to
                                wait between attempts to retry after delivery a failure.
                              format: int64
                              type: integer
                          type: object
                        url:
                          description: "URL to send log records to. \n An absolute
                            URL, with a scheme. Valid schemes depend on `type`. Special
                            schemes `tcp`, `tls`, `udp` and `udps` are used for types
                            that have no scheme of their own. For example, to send
                            syslog records using secure UDP: \n { type: syslog, url:
                            udps://syslog.example.com:1234 } \n Basic TLS is enabled
                            if the URL scheme requires it (for example 'https' or
                            'tls'). The 'username@password' part of `url` is ignored."
                          type: string
                      required:
                      - url
                      type: object
                    syslog:
                      description: Syslog provides optional extra properties for output
                        type `syslog`
                      properties:
                        appName:
                          description: "AppName is APP-NAME part of the syslog-msg
                            header \n AppName needs to be specified if using rfc5424.
                            The maximum length of the final values is truncated to
                            48 \n TODO: DETERMIN HOW to default the app name that
                            isnt based on fluentd assumptions of \"tag\" when this
                            is empty"
                          type: string
                        facility:
                          default: user
                          description: "Facility to set on outgoing syslog records.
                            \n Facility values are defined in https://tools.ietf.org/html/rfc5424#section-6.2.1.
                            The value can be a decimal integer. Facility keywords
                            are not standardized, this API recognizes at least the
                            following case-insensitive keywords (defined by https://en.wikipedia.org/wiki/Syslog#Facility_Levels):
                            \n kernel user mail daemon auth syslog lpr news uucp cron
                            authpriv ftp ntp security console solaris-cron local0
                            local1 local2 local3 local4 local5 local6 local7"
                          type: string
                        msgID:
                          description: "MsgID is MSGID part of the syslog-msg header
                            \n MsgID needs to be specified if using rfc5424.  The
                            maximum length of the final values is truncated to 32"
                          type: string
                        payloadKey:
                          description: PayloadKey specifies record field to use as
                            payload.
                          type: string
                        procID:
                          description: "ProcID is PROCID part of the syslog-msg header
                            \n ProcID needs to be specified if using rfc5424. The
                            maximum length of the final values is truncated to 128"
                          type: string
                        rfc:
                          default: RFC5424
                          enum:
                          - RFC3164
                          - RFC5424
                          type: string
                        severity:
                          default: informational
                          description: "Severity to set on outgoing syslog records.
                            \n Severity values are defined in https://tools.ietf.org/html/rfc5424#section-6.2.1
                            The value can be a decimal integer or one of these case-insensitive
                            keywords: \n Emergency Alert Critical Error Warning Notice
                            Informational Debug"
                          type: string
                        url:
                          description: "URL to send log records to. \n An absolute
                            URL, with a scheme. Valid schemes depend on `type`. Special
                            schemes `tcp`, `tls`, `udp` and `udps` are used for types
                            that have no scheme of their own. For example, to send
                            syslog records using secure UDP: \n { type: syslog, url:
                            udps://syslog.example.com:1234 } \n Basic TLS is enabled
                            if the URL scheme requires it (for example 'https' or
                            'tls'). The 'username@password' part of `url` is ignored."
                          type: string
                      required:
                      - url
                      type: object
                    tls:
                      description: TLS contains settings for controlling options on
                        TLS client connections.
                      properties:
                        ca:
                          description: CA can be used to specify a custom list of
                            trusted certificate authorities.
                          properties:
                            configMap:
                              description: Use ConfigMap if the value should be sourced
                                from a ConfigMap in the same namespace.
                              properties:
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                              type: object
                              x-kubernetes-map-type: atomic
                            key:
                              description: Name of the key used to get the value in
                                either the referenced ConfigMap or Secret.
                              type: string
                            secret:
                              description: Use Secret if the value should be sourced
                                from a Secret in the same namespace.
                              properties:
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                              type: object
                              x-kubernetes-map-type: atomic
                          required:
                          - key
                          type: object
                        certificate:
                          description: Certificate points to the server certificate
                            to use.
                          properties:
                            configMap:
                              description: Use ConfigMap if the value should be sourced
                                from a ConfigMap in the same namespace.
                              properties:
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                              type: object
                              x-kubernetes-map-type: atomic
                            key:
                              description: Name of the key used to get the value in
                                either the referenced ConfigMap or Secret.
                              type: string
                            secret:
                              description: Use Secret if the value should be sourced
                                from a Secret in the same namespace.
                              properties:
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                              type: object
                              x-kubernetes-map-type: atomic
                          required:
                          - key
                          type: object
                        insecureSkipVerify:
                          description: "If InsecureSkipVerify is true, then the TLS
                            client will be configured to skip validating server certificates.
                            \n This option is *not* recommended for production configurations."
                          type: boolean
                        key:
                          description: Key points to the private key of the server
                            certificate.
                          properties:
                            key:
                              description: Name of the key used to get the value from
                                the referenced Secret.
                              type: string
                            secret:
                              description: Use Secret if the value should be sourced
                                from a Secret in the same namespace.
                              properties:
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                              type: object
                              x-kubernetes-map-type: atomic
                          required:
                          - key
                          - secret
                          type: object
                        keyPassphrase:
                          description: KeyPassphrase points to the passphrase used
                            to unlock the private key.
                          properties:
                            key:
                              description: Name of the key used to get the value from
                                the referenced Secret.
                              type: string
                            secret:
                              description: Use Secret if the value should be sourced
                                from a Secret in the same namespace.
                              properties:
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                              type: object
                              x-kubernetes-map-type: atomic
                          required:
                          - key
                          - secret
                          type: object
                        securityProfile:
                          description: TLSSecurityProfile is the security profile
                            to apply to the output connection.
                          properties:
                            custom:
                              description: "custom is a user-defined TLS security
                                profile. Be extremely careful using a custom profile
                                as invalid configurations can be catastrophic. An
                                example custom profile looks like this: \n ciphers:
                                - ECDHE-ECDSA-CHACHA20-POLY1305 - ECDHE-RSA-CHACHA20-POLY1305
                                - ECDHE-RSA-AES128-GCM-SHA256 - ECDHE-ECDSA-AES128-GCM-SHA256
                                minTLSVersion: VersionTLS11"
                              nullable: true
                              properties:
                                ciphers:
                                  description: "ciphers is used to specify the cipher
                                    algorithms that are negotiated during the TLS
                                    handshake.  Operators may remove entries their
                                    operands do not support.  For example, to use
                                    DES-CBC3-SHA  (yaml): \n ciphers: - DES-CBC3-SHA"
                                  items:
                                    type: string
                                  type: array
                                minTLSVersion:
                                  description: "minTLSVersion is used to specify the
                                    minimal version of the TLS protocol that is negotiated
                                    during the TLS handshake. For example, to use
                                    TLS versions 1.1, 1.2 and 1.3 (yaml): \n minTLSVersion:
                                    VersionTLS11 \n NOTE: currently the highest minTLSVersion
                                    allowed is VersionTLS12"
                                  enum:
                                  - VersionTLS10
                                  - VersionTLS11
                                  - VersionTLS12
                                  - VersionTLS13
                                  type: string
                              type: object
                            intermediate:
                              description: "intermediate is a TLS security profile
                                based on: \n https://wiki.mozilla.org/Security/Server_Side_TLS#Intermediate_compatibility_.28recommended.29
                                \n and looks like this (yaml): \n ciphers: - TLS_AES_128_GCM_SHA256
                                - TLS_AES_256_GCM_SHA384 - TLS_CHACHA20_POLY1305_SHA256
                                - ECDHE-ECDSA-AES128-GCM-SHA256 - ECDHE-RSA-AES128-GCM-SHA256
                                - ECDHE-ECDSA-AES256-GCM-SHA384 - ECDHE-RSA-AES256-GCM-SHA384
                                - ECDHE-ECDSA-CHACHA20-POLY1305 - ECDHE-RSA-CHACHA20-POLY1305
                                - DHE-RSA-AES128-GCM-SHA256 - DHE-RSA-AES256-GCM-SHA384
                                minTLSVersion: VersionTLS12"
                              nullable: true
                              type: object
                            modern:
                              description: "modern is a TLS security profile based
                                on: \n https://wiki.mozilla.org/Security/Server_Side_TLS#Modern_compatibility
                                \n and looks like this (yaml): \n ciphers: - TLS_AES_128_GCM_SHA256
                                - TLS_AES_256_GCM_SHA384 - TLS_CHACHA20_POLY1305_SHA256
                                minTLSVersion: VersionTLS13 \n NOTE: Currently unsupported."
                              nullable: true
                              type: object
                            old:
                              description: "old is a TLS security profile based on:
                                \n https://wiki.mozilla.org/Security/Server_Side_TLS#Old_backward_compatibility
                                \n and looks like this (yaml): \n ciphers: - TLS_AES_128_GCM_SHA256
                                - TLS_AES_256_GCM_SHA384 - TLS_CHACHA20_POLY1305_SHA256
                                - ECDHE-ECDSA-AES128-GCM-SHA256 - ECDHE-RSA-AES128-GCM-SHA256
                                - ECDHE-ECDSA-AES256-GCM-SHA384 - ECDHE-RSA-AES256-GCM-SHA384
                                - ECDHE-ECDSA-CHACHA20-POLY1305 - ECDHE-RSA-CHACHA20-POLY1305
                                - DHE-RSA-AES128-GCM-SHA256 - DHE-RSA-AES256-GCM-SHA384
                                - DHE-RSA-CHACHA20-POLY1305 - ECDHE-ECDSA-AES128-SHA256
                                - ECDHE-RSA-AES128-SHA256 - ECDHE-ECDSA-AES128-SHA
                                - ECDHE-RSA-AES128-SHA - ECDHE-ECDSA-AES256-SHA384
                                - ECDHE-RSA-AES256-SHA384 - ECDHE-ECDSA-AES256-SHA
                                - ECDHE-RSA-AES256-SHA - DHE-RSA-AES128-SHA256 - DHE-RSA-AES256-SHA256
                                - AES128-GCM-SHA256 - AES256-GCM-SHA384 - AES128-SHA256
                                - AES256-SHA256 - AES128-SHA - AES256-SHA - DES-CBC3-SHA
                                minTLSVersion: VersionTLS10"
                              nullable: true
                              type: object
                            type:
                              description: "type is one of Old, Intermediate, Modern
                                or Custom. Custom provides the ability to specify
                                individual TLS security profile parameters. Old, Intermediate
                                and Modern are TLS security profiles based on: \n
                                https://wiki.mozilla.org/Security/Server_Side_TLS#Recommended_configurations
                                \n The profiles are intent based, so they may change
                                over time as new ciphers are developed and existing
                                ciphers are found to be insecure.  Depending on precisely
                                which ciphers are available to a process, the list
                                may be reduced. \n Note that the Modern profile is
                                currently not supported because it is not yet well
                                adopted by common software libraries."
                              enum:
                              - Old
                              - Intermediate
                              - Modern
                              - Custom
                              type: string
                          type: object
                      type: object
                    type:
                      description: Type of output sink.
                      enum:
                      - azureMonitor
                      - cloudwatch
                      - elasticsearch
                      - http
                      - kafka
                      - loki
                      - lokiStack
                      - googleCloudLogging
                      - splunk
                      - syslog
                      type: string
                  required:
                  - name
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - name
                x-kubernetes-list-type: map
              pipelines:
                description: Pipelines forward the messages selected by a set of inputs
                  to a set of outputs.
                items:
                  description: PipelineSpec links a set of inputs and transformations
                    to a set of outputs.
                  properties:
                    filterRefs:
                      description: "Filters lists the names of filters to be applied
                        to records going through this pipeline. \n Each filter is
                        applied in order. If a filter drops a records, subsequent
                        filters are not applied."
                      items:
                        type: string
                      type: array
                    inputRefs:
                      description: "InputRefs lists the names (`input.name`) of inputs
                        to this pipeline. \n The following built-in input names are
                        always available: \n `application` selects all logs from application
                        pods. \n `infrastructure` selects logs from openshift and
                        kubernetes pods and some node logs. \n `audit` selects node
                        logs related to security audits."
                      items:
                        type: string
                      type: array
                    name:
                      description: Name of the pipeline
                      type: string
                    outputRefs:
                      description: OutputRefs lists the names (`output.name`) of outputs
                        from this pipeline.
                      items:
                        type: string
                      type: array
                  required:
                  - inputRefs
                  - name
                  - outputRefs
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - name
                x-kubernetes-list-type: map
              serviceAccount:
                description: ServiceAccount points to the ServiceAccount resource
                  used by the collector pods.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
                x-kubernetes-map-type: atomic
            required:
            - pipelines
            - serviceAccount
            type: object
          status:
            description: ClusterLogForwarderStatus defines the observed state of ClusterLogForwarder
            properties:
              conditions:
                description: Conditions of the log forwarder.
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    \n type FooStatus struct{ // Represents the observations of a
                    foo's current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              filters:
                additionalProperties:
                  items:
                    description: "Condition contains details for one aspect of the
                      current state of this API Resource. --- This struct is intended
                      for direct use as an array at the field path .status.conditions.
                      \ For example, \n type FooStatus struct{ // Represents the observations
                      of a foo's current state. // Known .status.conditions.type are:
                      \"Available\", \"Progressing\", and \"Degraded\" // +patchMergeKey=type
                      // +patchStrategy=merge // +listType=map // +listMapKey=type
                      Conditions []metav1.Condition `json:\"conditions,omitempty\"
                      patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`
                      \n // other fields }"
                    properties:
                      lastTransitionTime:
                        description: lastTransitionTime is the last time the condition
                          transitioned from one status to another. This should be
                          when the underlying condition changed.  If that is not known,
                          then using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: message is a human readable message indicating
                          details about the transition. This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: observedGeneration represents the .metadata.generation
                          that the condition was set based upon. For instance, if
                          .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration
                          is 9, the condition is out of date with respect to the current
                          state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: reason contains a programmatic identifier indicating
                          the reason for the condition's last transition. Producers
                          of specific condition types may define expected values and
                          meanings for this field, and whether the values are considered
                          a guaranteed API. The value should be a CamelCase string.
                          This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False,
                          Unknown.
                        enum:
                        - "True"
                        - "False"
                        - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase.
                          --- Many .condition.type values are consistent across resources
                          like Available, but because arbitrary conditions can be
                          useful (see .node.status.conditions), the ability to deconflict
                          is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                    - lastTransitionTime
                    - message
                    - reason
                    - status
                    - type
                    type: object
                  type: array
                description: Filters maps filter name to condition of the filter.
                type: object
              inputs:
                additionalProperties:
                  items:
                    description: "Condition contains details for one aspect of the
                      current state of this API Resource. --- This struct is intended
                      for direct use as an array at the field path .status.conditions.
                      \ For example, \n type FooStatus struct{ // Represents the observations
                      of a foo's current state. // Known .status.conditions.type are:
                      \"Available\", \"Progressing\", and \"Degraded\" // +patchMergeKey=type
                      // +patchStrategy=merge // +listType=map // +listMapKey=type
                      Conditions []metav1.Condition `json:\"conditions,omitempty\"
                      patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`
                      \n // other fields }"
                    properties:
                      lastTransitionTime:
                        description: lastTransitionTime is the last time the condition
                          transitioned from one status to another. This should be
                          when the underlying condition changed.  If that is not known,
                          then using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: message is a human readable message indicating
                          details about the transition. This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: observedGeneration represents the .metadata.generation
                          that the condition was set based upon. For instance, if
                          .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration
                          is 9, the condition is out of date with respect to the current
                          state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: reason contains a programmatic identifier indicating
                          the reason for the condition's last transition. Producers
                          of specific condition types may define expected values and
                          meanings for this field, and whether the values are considered
                          a guaranteed API. The value should be a CamelCase string.
                          This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False,
                          Unknown.
                        enum:
                        - "True"
                        - "False"
                        - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase.
                          --- Many .condition.type values are consistent across resources
                          like Available, but because arbitrary conditions can be
                          useful (see .node.status.conditions), the ability to deconflict
                          is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                    - lastTransitionTime
                    - message
                    - reason
                    - status
                    - type
                    type: object
                  type: array
                description: Inputs maps input name to condition of the input.
                type: object
              outputs:
                additionalProperties:
                  items:
                    description: "Condition contains details for one aspect of the
                      current state of this API Resource. --- This struct is intended
                      for direct use as an array at the field path .status.conditions.
                      \ For example, \n type FooStatus struct{ // Represents the observations
                      of a foo's current state. // Known .status.conditions.type are:
                      \"Available\", \"Progressing\", and \"Degraded\" // +patchMergeKey=type
                      // +patchStrategy=merge // +listType=map // +listMapKey=type
                      Conditions []metav1.Condition `json:\"conditions,omitempty\"
                      patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`
                      \n // other fields }"
                    properties:
                      lastTransitionTime:
                        description: lastTransitionTime is the last time the condition
                          transitioned from one status to another. This should be
                          when the underlying condition changed.  If that is not known,
                          then using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: message is a human readable message indicating
                          details about the transition. This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: observedGeneration represents the .metadata.generation
                          that the condition was set based upon. For instance, if
                          .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration
                          is 9, the condition is out of date with respect to the current
                          state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: reason contains a programmatic identifier indicating
                          the reason for the condition's last transition. Producers
                          of specific condition types may define expected values and
                          meanings for this field, and whether the values are considered
                          a guaranteed API. The value should be a CamelCase string.
                          This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False,
                          Unknown.
                        enum:
                        - "True"
                        - "False"
                        - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase.
                          --- Many .condition.type values are consistent across resources
                          like Available, but because arbitrary conditions can be
                          useful (see .node.status.conditions), the ability to deconflict
                          is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                    - lastTransitionTime
                    - message
                    - reason
                    - status
                    - type
                    type: object
                  type: array
                description: Outputs maps output name to condition of the output.
                type: object
              pipelines:
                additionalProperties:
                  items:
                    description: "Condition contains details for one aspect of the
                      current state of this API Resource. --- This struct is intended
                      for direct use as an array at the field path .status.conditions.
                      \ For example, \n type FooStatus struct{ // Represents the observations
                      of a foo's current state. // Known .status.conditions.type are:
                      \"Available\", \"Progressing\", and \"Degraded\" // +patchMergeKey=type
                      // +patchStrategy=merge // +listType=map // +listMapKey=type
                      Conditions []metav1.Condition `json:\"conditions,omitempty\"
                      patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`
                      \n // other fields }"
                    properties:
                      lastTransitionTime:
                        description: lastTransitionTime is the last time the condition
                          transitioned from one status to another. This should be
                          when the underlying condition changed.  If that is not known,
                          then using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: message is a human readable message indicating
                          details about the transition. This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: observedGeneration represents the .metadata.generation
                          that the condition was set based upon. For instance, if
                          .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration
                          is 9, the condition is out of date with respect to the current
                          state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: reason contains a programmatic identifier indicating
                          the reason for the condition's last transition. Producers
                          of specific condition types may define expected values and
                          meanings for this field, and whether the values are considered
                          a guaranteed API. The value should be a CamelCase string.
                          This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False,
                          Unknown.
                        enum:
                        - "True"
                        - "False"
                        - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase.
                          --- Many .condition.type values are consistent across resources
                          like Available, but because arbitrary conditions can be
                          useful (see .node.status.conditions), the ability to deconflict
                          is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                    - lastTransitionTime
                    - message
                    - reason
                    - status
                    - type
                    type: object
                  type: array
                description: Pipelines maps pipeline name to condition of the pipeline.
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
