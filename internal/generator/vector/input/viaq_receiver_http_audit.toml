[sources.input_myreceiver]
type = "http_server"
address = "[::]:12345"
decoding.codec = "json"

[sources.input_myreceiver.tls]
enabled = true
key_file = "/etc/collector/receiver/collector-myreceiver/tls.key"
crt_file = "/etc/collector/receiver/collector-myreceiver/tls.crt"

[transforms.input_myreceiver_split]
type = "remap"
inputs = ["input_myreceiver"]
source = '''
  if exists(.items) && is_array(.items) {. = unnest!(.items)} else {.}
'''

[transforms.input_myreceiver_items]
type = "remap"
inputs = ["input_myreceiver_split"]
source = '''
  if exists(.items) {. = .items} else {.}
'''

[transforms.input_myreceiver_viaq]
type = "remap"
inputs = ["input_myreceiver_items"]
source = '''
  .openshift.cluster_id = "${OPENSHIFT_CLUSTER_ID:-}"
  .tag = ".k8s-audit.log"
  . = merge(., parse_json!(string!(.message))) ?? .
  del(.message)
  ._internal.log_source = "kubeAPI"
  .k8s_audit_level = .level
'''

# Set log_type
[transforms.input_myreceiver_viaq_logtype]
type = "remap"
inputs = ["input_myreceiver_viaq"]
source = '''
    .log_type = "audit"
    .hostname = get_env_var("VECTOR_SELF_NODE_NAME") ?? ""
    ts = del(.timestamp); if !exists(."@timestamp") {."@timestamp" = ts}
'''
