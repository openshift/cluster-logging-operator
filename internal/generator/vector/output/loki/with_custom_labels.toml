[transforms.loki_receiver_remap]
type = "remap"
inputs = ["application"]
source = '''
		 del(.tag)
		'''

[transforms.loki_receiver_dedot]
type = "remap"
inputs = ["loki_receiver_remap"]
source = '''
		 .openshift.sequence = to_unix_timestamp(now(), unit: "nanoseconds")
		 if exists(.kubernetes.namespace_labels) {
			  for_each(object!(.kubernetes.namespace_labels)) -> |key,value| {
				newkey = replace(key, r'[\./]', "_")
				.kubernetes.namespace_labels = set!(.kubernetes.namespace_labels,[newkey],value)
				if newkey != key {
				  .kubernetes.namespace_labels = remove!(.kubernetes.namespace_labels,[key],true)
				}
			  }
		 }
		 if exists(.kubernetes.labels) {
			  for_each(object!(.kubernetes.labels)) -> |key,value| {
				newkey = replace(key, r'[\./]', "_")
				.kubernetes.labels = set!(.kubernetes.labels,[newkey],value)
				if newkey != key {
				  .kubernetes.labels = remove!(.kubernetes.labels,[key],true)
				}
			  }
		 }
		'''

[transforms.loki_receiver_remap_label]
type = "remap"
inputs = ["loki_receiver_dedot"]
source = '''
if !exists(.kubernetes.namespace_name) {
  .kubernetes.namespace_name = ""
}
if !exists(.kubernetes.pod_name) {
  .kubernetes.pod_name = ""
}
if !exists(.kubernetes.container_name) {
  .kubernetes.container_name = ""
}
'''



[sinks.loki_receiver]
type = "loki"
inputs = ["loki_receiver_remap_label"]
endpoint = "https://logs-us-west1.grafana.net"
out_of_order_action = "accept"
healthcheck.enabled = false

[sinks.loki_receiver.encoding]
codec = "json"

[sinks.loki_receiver.labels]
kubernetes_container_name = "{{kubernetes.container_name}}"
kubernetes_host = "${VECTOR_SELF_NODE_NAME}"
kubernetes_labels_app = "{{kubernetes.labels.\"app\"}}"

# Basic Auth Config
[sinks.loki_receiver.auth]
strategy = "basic"
user = "username"
password = "password"