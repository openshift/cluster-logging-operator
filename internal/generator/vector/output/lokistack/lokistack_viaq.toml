[transforms.output_default_lokistack_route]
type = "route"
inputs = ["pipeline_fake"]
route.application = '.log_type == "application"'
route.audit = '.log_type == "audit"'
route.infrastructure = '.log_type == "infrastructure"'

[transforms.output_default_lokistack_application_remap]
type = "remap"
inputs = ["output_default_lokistack_route.application"]
source = '''
  del(.tag)
'''

[transforms.output_default_lokistack_application_remap_label]
type = "remap"
inputs = ["output_default_lokistack_application_remap"]
source = '''
  if !exists(.kubernetes.namespace_name) {
    .kubernetes.namespace_name = ""
  }
  if !exists(.kubernetes.pod_name) {
    .kubernetes.pod_name = ""
  }
  if !exists(.kubernetes.container_name) {
    .kubernetes.container_name = ""
  }
'''

[sinks.output_default_lokistack_application]
type = "loki"
inputs = ["output_default_lokistack_application_remap_label"]
endpoint = "https://logging-loki-gateway-http.openshift-logging.svc:8080/api/logs/v1/application"
out_of_order_action = "accept"
healthcheck.enabled = false

[sinks.output_default_lokistack_application.encoding]
codec = "json"
except_fields = ["_internal"]

[sinks.output_default_lokistack_application.labels]
k8s_container_name = "{{kubernetes.container_name}}"
k8s_namespace_name = "{{kubernetes.namespace_name}}"
k8s_node_name = "${VECTOR_SELF_NODE_NAME}"
k8s_pod_name = "{{kubernetes.pod_name}}"
kubernetes_container_name = "{{kubernetes.container_name}}"
kubernetes_host = "${VECTOR_SELF_NODE_NAME}"
kubernetes_namespace_name = "{{kubernetes.namespace_name}}"
kubernetes_pod_name = "{{kubernetes.pod_name}}"
log_type = "{{log_type}}"
openshift_log_type = "{{log_type}}"

[sinks.output_default_lokistack_application.tls]
ca_file = "/var/run/ocp-collector/config/openshift-service-ca.crt/ca-bundle.crt"

[sinks.output_default_lokistack_application.auth]
strategy = "bearer"
token = "SECRET[kubernetes_secret.test-sa-token/token]"

[transforms.output_default_lokistack_audit_remap]
type = "remap"
inputs = ["output_default_lokistack_route.audit"]
source = '''
  del(.tag)
'''

[transforms.output_default_lokistack_audit_remap_label]
type = "remap"
inputs = ["output_default_lokistack_audit_remap"]
source = '''
  if !exists(.kubernetes.namespace_name) {
    .kubernetes.namespace_name = ""
  }
  if !exists(.kubernetes.pod_name) {
    .kubernetes.pod_name = ""
  }
  if !exists(.kubernetes.container_name) {
    .kubernetes.container_name = ""
  }
'''

[sinks.output_default_lokistack_audit]
type = "loki"
inputs = ["output_default_lokistack_audit_remap_label"]
endpoint = "https://logging-loki-gateway-http.openshift-logging.svc:8080/api/logs/v1/audit"
out_of_order_action = "accept"
healthcheck.enabled = false

[sinks.output_default_lokistack_audit.encoding]
codec = "json"
except_fields = ["_internal"]

[sinks.output_default_lokistack_audit.labels]
k8s_container_name = "{{kubernetes.container_name}}"
k8s_namespace_name = "{{kubernetes.namespace_name}}"
k8s_node_name = "${VECTOR_SELF_NODE_NAME}"
k8s_pod_name = "{{kubernetes.pod_name}}"
kubernetes_container_name = "{{kubernetes.container_name}}"
kubernetes_host = "${VECTOR_SELF_NODE_NAME}"
kubernetes_namespace_name = "{{kubernetes.namespace_name}}"
kubernetes_pod_name = "{{kubernetes.pod_name}}"
log_type = "{{log_type}}"
openshift_log_type = "{{log_type}}"

[sinks.output_default_lokistack_audit.tls]
ca_file = "/var/run/ocp-collector/config/openshift-service-ca.crt/ca-bundle.crt"

[sinks.output_default_lokistack_audit.auth]
strategy = "bearer"
token = "SECRET[kubernetes_secret.test-sa-token/token]"

[transforms.output_default_lokistack_infrastructure_remap]
type = "remap"
inputs = ["output_default_lokistack_route.infrastructure"]
source = '''
  del(.tag)
'''

[transforms.output_default_lokistack_infrastructure_remap_label]
type = "remap"
inputs = ["output_default_lokistack_infrastructure_remap"]
source = '''
  if !exists(.kubernetes.namespace_name) {
    .kubernetes.namespace_name = ""
  }
  if !exists(.kubernetes.pod_name) {
    .kubernetes.pod_name = ""
  }
  if !exists(.kubernetes.container_name) {
    .kubernetes.container_name = ""
  }
'''

[sinks.output_default_lokistack_infrastructure]
type = "loki"
inputs = ["output_default_lokistack_infrastructure_remap_label"]
endpoint = "https://logging-loki-gateway-http.openshift-logging.svc:8080/api/logs/v1/infrastructure"
out_of_order_action = "accept"
healthcheck.enabled = false

[sinks.output_default_lokistack_infrastructure.encoding]
codec = "json"
except_fields = ["_internal"]

[sinks.output_default_lokistack_infrastructure.labels]
k8s_container_name = "{{kubernetes.container_name}}"
k8s_namespace_name = "{{kubernetes.namespace_name}}"
k8s_node_name = "${VECTOR_SELF_NODE_NAME}"
k8s_pod_name = "{{kubernetes.pod_name}}"
kubernetes_container_name = "{{kubernetes.container_name}}"
kubernetes_host = "${VECTOR_SELF_NODE_NAME}"
kubernetes_namespace_name = "{{kubernetes.namespace_name}}"
kubernetes_pod_name = "{{kubernetes.pod_name}}"
log_type = "{{log_type}}"
openshift_log_type = "{{log_type}}"

[sinks.output_default_lokistack_infrastructure.tls]
ca_file = "/var/run/ocp-collector/config/openshift-service-ca.crt/ca-bundle.crt"

[sinks.output_default_lokistack_infrastructure.auth]
strategy = "bearer"
token = "SECRET[kubernetes_secret.test-sa-token/token]"
