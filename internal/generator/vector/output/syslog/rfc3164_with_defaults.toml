[transforms.example_parse_encoding]
type = "remap"
inputs = ["application"]
source = '''
if ._internal.log_type == "infrastructure" && ._internal.log_source == "node" {
   ._syslog.tag = to_string!(._internal.systemd.u.SYSLOG_IDENTIFIER || "")
   ._syslog.proc_id = to_string!(._internal.systemd.t.PID || "")
}
if ._internal.log_source == "container" {
   	._syslog.tag, err = join([._internal.kubernetes.namespace_name, ._internal.kubernetes.pod_name, ._internal.kubernetes.container_name], "")
   	if err != null {
   	   log("K8s metadata (namespace, pod, or container) missing; syslog.tag set to empty", level: "error")
  	   ._syslog.tag = ""
    } else {
       #Remove non-alphanumeric characters
       ._syslog.tag = replace(._syslog.tag, r'[^a-zA-Z0-9]', "")
       #Truncate the sanitized tag to 32 characters
       ._syslog.tag = truncate(._syslog.tag, 32)
    }
    ._syslog.severity = ._internal.level
    ._syslog.facility = "user"
}
if ._internal.log_type == "audit" {
   ._syslog.tag = ._internal.log_source
   ._syslog.severity = "informational"
   ._syslog.facility = "security"
}
proc_id = to_string!(._syslog.proc_id || "-")
tag = to_string!(._syslog.tag || "")
if proc_id != "-" && proc_id != "" {
  ._syslog.tag = to_string(tag||"") + "[" + to_string(proc_id)  + "]"
} else {
  ._syslog.tag = to_string(tag)
}
'''

[sinks.example]
type = "socket"
inputs = ["example_parse_encoding"]
address = "logserver:514"
mode = "udp"

[sinks.example.encoding]
codec = "syslog"
except_fields = ["_internal"]
rfc = "rfc3164"
facility = "$$._syslog.facility"
severity = "$$._syslog.severity"
proc_id = "$$._syslog.proc_id"
tag = "$$._syslog.tag"
add_log_source = false
