[transforms.example_parse_encoding]
type = "remap"
inputs = ["application"]
source = '''
._syslog.msg_id = ._internal.log_source

if ._internal.log_type == "infrastructure" && ._internal.log_source == "node" {
    ._syslog.app_name = to_string!(._internal.systemd.u.SYSLOG_IDENTIFIER || "-")
    ._syslog.proc_id = to_string!(._internal.systemd.t.PID || "-")
}
if ._internal.log_source == "container" {
   ._syslog.app_name, err = join([._internal.kubernetes.namespace_name, ._internal.kubernetes.pod_name, ._internal.kubernetes.container_name], "_")
   if err != null {
     log("K8s metadata (namespace, pod, or container) missing; syslog.appname set to '-'", level: "error")
  	 ._syslog.app_name = "-"
   }
   ._syslog.proc_id = to_string!(._internal.kubernetes.pod_id || "-")
   ._syslog.severity = ._internal.level
   ._syslog.facility = "user"
}
if ._internal.log_type == "audit" {
   ._syslog.app_name = ._internal.log_source
   ._syslog.proc_id = to_string!(._internal.auditID || "-")
   ._syslog.severity = "informational"
   ._syslog.facility = "security"
}
'''

[sinks.example]
type = "socket"
inputs = ["example_parse_encoding"]
address = "logserver:514"
mode = "tcp"

[sinks.example.encoding]
codec = "syslog"
except_fields = ["_internal"]
rfc = "rfc5424"
facility = "$$._syslog.facility"
severity = "$$._syslog.severity"
app_name = "$$._syslog.app_name"
msg_id = "$$._syslog.msg_id"
proc_id = "$$._syslog.proc_id"
add_log_source = false

[sinks.example.buffer]
type = "disk"
when_full = "block"
max_size = 268435488