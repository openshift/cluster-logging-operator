[transforms.example_parse_encoding]
type = "remap"
inputs = ["application"]
source = '''
._internal.syslog.msg_id = .log_source
_tmp, err = parse_json(string!(.message))
if err != null {
  _tmp = .
  log(err, level: "error")
} else {
  _tmp = merge!(.,_tmp)
}
parsed_msg = _tmp

.facility = to_string!(parsed_msg.facility||"none")
.severity = to_string!(parsed_msg.severity||"none")
.proc_id = to_string!(parsed_msg.proc_id||"none")
.app_name = to_string!(parsed_msg.app_name||"none")
.msg_id = to_string!(parsed_msg.msg_id||"none")

if is_null(.payload_key) {
	.payload_key = .
} else {
	.payload_key = .payload_key
}
'''

[sinks.example]
type = "socket"
inputs = ["example_parse_encoding"]
address = "logserver:6514"
mode = "tcp"

[sinks.example.encoding]
codec = "syslog"
except_fields = ["_internal"]
rfc = "rfc5424"
add_log_source = false
payload_key = "payload_key"
facility = "$$.message.facility"
severity = "$$.message.severity"
proc_id = "$$.message.proc_id"
app_name = "$$.message.app_name"
msg_id = "$$.message.msg_id"

[sinks.example.tls]
enabled = true
key_file = "/var/run/ocp-collector/secrets/syslog-tls/tls.key"
crt_file = "/var/run/ocp-collector/secrets/syslog-tls/tls.crt"
ca_file = "/var/run/ocp-collector/secrets/syslog-tls/ca-bundle.crt"
key_pass = "mysecretpassword"